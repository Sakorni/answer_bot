[
  {
    "week": 1,
    "question": "Что из перечисленного НЕ является отличием универсальных микроконтроллеров от\nперсональных компьютеров?",
    "answer": "возможность выполнять программы общего назначения"
  },
  {
    "week": 1,
    "question": "Укажите общее название систем, к которым относятся кластеры, мейнфреймы,\nсуперкомпьютеры, грид-системы.\nУказание. Можно указать аббревиатуру латинскими буквами или полное название порусски в именительном падеже.",
    "answer": "HPC"
  },
  {
    "week": 1,
    "question": "Рассмотрим фрагмент программы на языке ассемблера\n XOR DX, DX\n MOV AX, 7\n MOV BX, 3\n MOV CX, 1024\n DIV BX\n DIV CX\nКаково значение регистра AX после его выполнения? Попробуйте дать ответ, не прибегая\nк отладчику. Можете ли вы объяснить результат? В поле ответа запишите только\nчисловой ответ.",
    "answer": "64"
  },
  {
    "week": 1,
    "question": "Преимущество RFID-меток перед штрих-кодами состоит в том, что",
    "answer": "всё вышеперечисленное"
  },
  {
    "week": 1,
    "question": "Пусть некоторый язык программирования предоставляет встроенный тип данных\n«матрица», предоставляющий две операции: создание матрицы с заданными размерами,\nобращение к (i,j)-ому элементу.\nКонкретный способ расположения данных из ячеек матрицы: по строкам (как в C) или по\nстолбцам (как в Фортране) или любой другой относится к:",
    "answer": "организации данного языка программирования"
  },
  {
    "week": 1,
    "question": "Запишите имя первой машины с хранимой в памяти программой, разработанной на\nЕвропейском континенте.",
    "answer": "МЭСМ"
  },
  {
    "week": 1,
    "question": "Основным конструктивным элементом, обеспечившим переход от первого поколения\n(ламповых) электронных вычислительных машин ко второму, стал…\nОтвет: существительное в единственном числе.",
    "answer": "транзистор"
  },
  {
    "week": 1,
    "question": "Закон Мура посвящён росту",
    "answer": "количества транзисторов на одной микросхеме"
  },
  {
    "week": 1,
    "question": "Фамилия учёного, чьё имя неразрывно связано с понятием суперкомпьютера.",
    "answer": "Крей"
  },
  {
    "week": 1,
    "question": "Самое общее название для программы, которая переводит текст на одном языке\n(«исходном») в текст на другом языке («целевом», зачастую бинарном) называется",
    "answer": "компилятор"
  },
  {
    "week": 5,
    "question": "Расположение микрокоманд в памяти отличается от расположения инструкций\nпроцессора в скомпилированной программе тем, что первые",
    "answer": "расположены в фиксированной последовательности, а порядок\nисполнения определяется содержимым микрокоманды и динамическими условиями"
  },
  {
    "week": 5,
    "question": "Арифметический сдвиг вправо позволяет выполнять следующие операции:",
    "answer": "деление на степени двойки числа, представленного в\nдополнительном коде, знаковое расширение числа, представленного в дополнительном\nкоде"
  },
  {
    "week": 5,
    "question": "Бинарный код инструкции уровня ISA, передаваемый из оперативной памяти на\nпроцессор, в большинстве случаев содержит…",
    "answer": "тип операции, операнды или их местонахождение"
  },
  {
    "week": 5,
    "question": "Экспонента числа с плавающей точкой в стандарте IEEE 754 хранится в",
    "answer": "формате со смещением"
  },
  {
    "week": 5,
    "question": "Запишите число 17,25 в формате с фиксированной точкой, если известно что под целую\nчасть отведено 5 двоичных разрядов, а под дробную часть выделено 3 разряда. В ответе\nдолжна быть последовательность из 0 и 1, всего 8 двоичных цифр без каких либо\nразделителей.",
    "answer": "10001010"
  },
  {
    "week": 5,
    "question": "По числу, представленному в дополнительном коде, можно получить его\nпротивоположное, выполнив последовательно две операции над битовым\nпредставлением, not и inc — это справедливо для всех чисел, кроме\n(В качестве примера взяты четырёхзрядные числа.)",
    "answer": "1000"
  },
  {
    "week": 5,
    "question": "В восьмиразрядной системе представления чисел в дополнительном коде записали число\n-13. Затем применили к нему инструкцию побитового сдвига вправо (SHR) на 3 разряда.\nЗапишите полученный результат в двоичном представлении. (В ответе должна быть\nтолько последовательность из 0 и 1 (всего 8 знаков), без каких-либо дополнительных\nразделительных символов).",
    "answer": "00011110"
  },
  {
    "week": 5,
    "question": "Как называется требование отличия от нуля старшего значащего разряда мантиссы в\nпредставлении числа с плавающей точкой?",
    "answer": "нормализация"
  },
  {
    "week": 5,
    "question": "К какому из типов чисел, согласно стандарту IEEE 754, относится результат сложения\nплюс бесконечности и минус бесконечности?",
    "answer": "Не число"
  },
  {
    "week": 5,
    "question": "Используя те же соглашения, которые позволили записать число 1.0 в виде 3F800000\n(представление числа с плавающей точкой одинарной точности в стандарте IEEE 754),\nзапишите представление отрицательного числа: -1.5.",
    "answer": "BFC00000"
  },
  {
    "week": 6,
    "question": "Запишите последовательность из двух микрокоманд, которая позволяет увеличить слово\nс вершины стека, на единицу. Помните, что значение с вершины стека всегда хранится в\nдвух местах: в регистре TOS и в оперативной памяти по адресу, заданному регистром SP.\nОтвет не должен содержать пробелов, кроме как перед именем метки в команде goto. Две\nмикрокоманды следует разделить символом ‘|’ (без кавычек).",
    "answer": "MAR=SP|MDR=TOS=TOS+1;wr;goto Main1"
  },
  {
    "week": 6,
    "question": "В каком регистре отражается результат операции read (rd) в микроархитектуре Mic-1.",
    "answer": "MDR"
  },
  {
    "week": 6,
    "question": "Файл конфигурации ассемблера ijvm.conf из \"пакета юного микропрограммиста\" имеет\nстрогий и простой формат: он разделён на две колонки. В первой колонке указываются:",
    "answer": "коды инструкций IJVM"
  },
  {
    "week": 6,
    "question": "Запишите последовательность из двух микрокоманд, которая реализует инструкцию DUP,\nто есть дублирует слово на вершине стека.\nПример. Стек до операции 42 ← 41 ← 40 (вершина стека расположена слева и равна\n42). Стек после операции: 42 ← 42 ← 41 ← 40.\nМикрокоманды должны записываться без пробелов и разделяться символом |. Не\nзабудьте выполнить переход к началу следующего цикла (goto Main1) после нужных\nдействий.",
    "answer": "MAR=SP=SP+1|MDR=TOS;wr;goto Main1"
  },
  {
    "week": 6,
    "question": "В последовательности микрокоманд, необходимых для выполнения очередной\nинструкции процессора, возможны ветвления за счёт\nУкажите все возможные варианты правильных ответов.",
    "answer": "учёта флагов АЛУ, специализированных полей бинарного формата\nмикрокоманды"
  },
  {
    "week": 6,
    "question": "Глядя на полную микропрограмму для Mic-1 в синтаксисе микроассемблера MAL\nопределите количество микрокоманд, необходимых для выполнения инструкции POP из\nнабора инструкций IJVM.",
    "answer": "3"
  },
  {
    "week": 6,
    "question": "Модификация микроархитектуры Mic-1 до трёхшинной архитектуры\nмогла\nбы...\nЗамечание. Слово «защёлка» следует понимать как синоним слова «регистр».",
    "answer": "сократить число микрокоманд для обработки одной инструкции\nуровня ISA"
  },
  {
    "week": 6,
    "question": "Блок предварительной выборки инструкций на процессоре позволяет в том или ином\nсмысле воплотить следующие идеи ускорения работы:",
    "answer": "сокращение числа циклов на одну инструкцию, параллельное\nисполнение"
  },
  {
    "week": 6,
    "question": "Устройство кэш-памяти имеет отношение к уровню",
    "answer": "микроархитектуры"
  },
  {
    "week": 6,
    "question": "Напишите либо код, либо мнемонику инструкции, ответственной за вызов подпрограмм в\nассемблере Mic-1.",
    "answer": "0xB6"
  },
  {
    "week": 7,
    "question": "На входных линиях 3-мультиплексора имеется следующий сигнал (нумерация контактов\nслева—направо): 01001110, на управляющих линиях (младшие биты слева): 001. Каково\nзначение выходного сигнала?",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Пусть операции на шине DDR3 занимают следующее количество тактов работы:\nACTIVATE = 3 такта,\nWRITE = 1 такт,\nPRECHARGE = 2 такта после получения банком команды WRITE.\nПредположим, что необходимо записать информацию в две ячейки памяти,\nрасположенные в двух разных банках памяти. Сколько тактов работы шины потребуется\nдля отсылки команд, осуществляющих эти операции, с учётом конвейеризации шины\nDDR3?\nОтвет записать цифрами.",
    "answer": "7"
  },
  {
    "week": 7,
    "question": "Укажите все варианты входных значений S, R и Q, при которых происходит переключение\nSR-защелки в другое состояние.\nВыберите один или несколько ответов:",
    "answer": "S=1, R=0, Q = 0, S=0, R=1, Q = 1"
  },
  {
    "week": 7,
    "question": "Как видно из примера с конвейерной реализацией инструкции SWAP, простой конвейера\nмогут вызывать\nВыберите один ответ:",
    "answer": "зависимости по данным"
  },
  {
    "week": 7,
    "question": "Перенумеруем возможные входы SR-защёлки (значения пары контактов S и R) от 0 до 3,\nподразумевая двоичную запись номеров как определяющую значения входов. Тогда\nномер запрещённого входа SR-защёлки равен",
    "answer": "3"
  },
  {
    "week": 7,
    "question": "Простейшее одноразрядное АЛУ представляет из себя среднюю интегральную схему,\nреализующую три логических и одну арифметическую операцию. Чтобы указать, какую\nименно операцию нужно выполнить в данный момент, АЛУ имеет две входные линии,\nпринимающие номер нужной команды. Вспомогательная схема в составе АЛУ\nпреобразует этот номер в сигнал на одной из четырёх линий, открывающий путь\nрезультату соответствующей операции на выходную линию АЛУ. Как называется эта\nвспомогательная схема?",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Название интегральной схемы, которая по n входам позволяет сигнализировать один из\n2 выходов. Входные сигналы представляют номер сигнализируемого выхода.",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Вычитание и переход к противоположному элементу на АЛУ для Mic-1 реализовано с\nучётом того факта, что целые числа представлены следующим образом.",
    "answer": "в дополнительном коде"
  },
  {
    "week": 7,
    "question": "Рассмотрите схему синхронной D-защелки. Если все вентили сделаны по схемам,\nуказанным в лекции 10, то сколько транзисторов понадобится для\nизготовления синхронной D-защелки. Вентиль AND выполнен через вентили NAND и\nинвертор (NOT) (в качестве ответа указать число цифрами).",
    "answer": "11"
  },
  {
    "week": 7,
    "question": "Чтобы получить из одного тактового генератора сигнал с удлинённым фронтом,\nнеобходимо применить задержку и:",
    "answer": "вентиль OR"
  },
  {
    "week": 7,
    "question": "Кодер — это простейшая интегральная схема, обратная декодеру (по аналогии с\nмультиплексором/демультиплексором), по одной сигнализированной линии она выдаёт\nномер этой линии. Если конфигурация входных линий 2-кодера выглядит так: D =0, D =1,\nD =0, D =0, то как выглядит конфигурация на выходных линиях F , F ?\nУказание: ответ даётся двоичным числом, записанным, начиная со старших разрядов\n(F F ).",
    "answer": "01"
  },
  {
    "week": 7,
    "question": "Класс микросхем энергонезависимой памяти с однократной записью, которые можно\nзапрограммировать вне завода производителя, называется…\nУказание: ответ — аббревиатура на английском.",
    "answer": "PROM"
  },
  {
    "week": 7,
    "question": "Одно из отличий динамической памяти от статической состоит в том, что она",
    "answer": "более объёмная"
  },
  {
    "week": 7,
    "question": "Юный радиолюбитель Грегори проектировал новую интегральную схему, когда ему\nвстретилась знакомая подзадача: по n-разрядному двоичному числу требовалось\nсигнализировать линию выхода, номер которой равен этому числу. Грегори хлопнул себя\nпо лбу и побежал на радиорынок. Какую стандартную схему попросит Грегори на\nрадиорынке?",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Если на вход мультиплексора, реализующего функцию 3-большинства\nподать последовательность битов 011, то какое значение будет на выходе?",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Укажите размер памяти (в битах), который можно \"представить\" одной синхронной Dзащелкой (в качестве ответа введите только число).",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Современный способ реализации регистров памяти процессора\nпредполагает использование",
    "answer": "параллельного подключения нескольких триггеров (например, Dтриггеров)"
  },
  {
    "week": 7,
    "question": "Рассмотрите схему триггера (Рис. 3.23 в книге Таненбаума). Верно ли, что время\nзадержки определяется параметрами инвертора?",
    "answer": "Верно"
  },
  {
    "week": 7,
    "question": "Поставьте в соответствие следующим вентилям.\nxor\nnot\nnor\nnor",
    "answer": "AB=))>X → xor, A->оX → not, AB=)>oX → nor, AB=)>X → or"
  },
  {
    "week": 7,
    "question": "Название DDR современных микросхем памяти отсылает к",
    "answer": "пересылке команд и данных дважды за один такт работы шины памяти"
  },
  {
    "week": 7,
    "question": "Другое название операции NAND, известное из курса дискретной математики.",
    "answer": "Штрих Шеффера"
  },
  {
    "week": 7,
    "question": "Тактовые генераторы, у которых время существования импульса с высоким уровнем\nравно времени существования импульса с низким уровнем называются",
    "answer": "синхронными"
  },
  {
    "week": 7,
    "question": "Регистры на основных шинах тракта данных в архитектуре Mic-3 позволяют реализовать",
    "answer": "конвейер"
  },
  {
    "week": 7,
    "question": "Название схемы, которая используется для обработки адреса, поступившего на схему\nпамяти, с целью сигнализации нужной части этой схемы.",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Для микропрограммной реализации умножения в архитектуре Mic-1 следует многократно\nпровести операнды через",
    "answer": "тракт данных"
  },
  {
    "week": 7,
    "question": "Мультиплексор представляет из себя среднюю интегральную схему, которая позволяет\nрешать задачу",
    "answer": "сериализации входного параллельного сигнала. Под сериализацией\nпонимают процесс перевода структуры данных в последовательность битов."
  },
  {
    "week": 7,
    "question": "Чтобы получить из одного тактового генератора сигнал с удлинённым фронтом,\nнеобходимо применить задержку и:",
    "answer": "вентиль OR"
  },
  {
    "week": 7,
    "question": "Расположение микрокоманд в ПЗУ процессора отличается от расположения инструкций\nпроцессора в скомпилированной программе, загруженной в оперативную память, тем, что\nпервые",
    "answer": "расположены в фиксированной последовательности, а порядок\nисполнения определяется содержимым микрокоманды и динамическими условиями"
  },
  {
    "week": 7,
    "question": "В приведённой на лекции логической вентильной схеме АЛУ присутствуют все имена\nуправляющих сигналов, упомянутых в «таблице полезных сочетаний управляющих\nсигналов», кроме одного — INC. Для реализации операции INC увеличения результата на\nединицу…",
    "answer": "можно использовать вход переноса АЛУ для младшего бита числа"
  },
  {
    "week": 7,
    "question": "Какие из булевых функций F(A,B) реализованы на следующих схемах:\n0 1\nВыберите один или несколько ответов:",
    "answer": "or, xor"
  },
  {
    "week": 8,
    "question": "Для микропрограммной реализации умножения требовалось многократно провести\nоперанды через",
    "answer": "тракт данных"
  },
  {
    "week": 8,
    "question": "В некотором 16-разрядном компьютере имеется один уровень кэша размером 3 Мб,\nкоторый использует кэш-линии длиной 256 байт (байты считаются 8-битными).\nПредположим, что процессор пытается прочесть слово, которое отсутствует в кэше. В\nэтой ситуации из оперативной памяти в кэш подгружается",
    "answer": "256 байт"
  },
  {
    "week": 8,
    "question": "Является ли множество кодовых слов кода N-кратного повторения для некоторого K\nлинейным подпространством пространства {0,1} ?",
    "answer": "Да, для всех натуральных N."
  },
  {
    "week": 8,
    "question": "Поставьте в соответствие следующим вентилям.\nnot\nor\nnor\nxor",
    "answer": "A>oX → not, AB=)>X → or, AB=)>oX → nor, AB=))>X → xor"
  },
  {
    "week": 8,
    "question": "К какому разделу таксономии Флинна относятся матричные процессоры (в том числе,\nпроцессоры на современных видеокартах)?\nУказание: запишите аббревиатуру",
    "answer": "SIMD"
  },
  {
    "week": 8,
    "question": "Самое общее название для программы, которая переводит текст на одном языке\n(«исходном») в текст на другом языке («целевом», зачастую бинарном) называется",
    "answer": "компилятор"
  },
  {
    "week": 8,
    "question": "Закодируйте сообщение 1001 с помощью (7,4)-кода Хэмминга.\nУказание 1: в ответе записать значения битов кодового слова без пробелов, скобок и\nдругих знаков.\nУказание 2: расположение битов в кодовом слове должно следовать предложенному на\nлекции (существуют и другие схемы их расположения).",
    "answer": "0011001"
  },
  {
    "week": 8,
    "question": "Чтобы иметь возможность контролировать (не исправляя) 3 ошибки в каждом кодовом\nслове, необходимо выбрать помехоустойчивый код, минимальное кодовое расстояние d\nкоторого не меньше…\nУказание: ответ записать цифрами.",
    "answer": "4"
  },
  {
    "week": 8,
    "question": "Предположим, что требуется совершить переход по метке L при условии, что значение в\nрегистре $s0 больше, чем в регистре $s1. Запишите MIPS-инструкции для осуществления\nэтой логики. В качестве хранилища промежуточного результата можно использовать\nтолько регистр $t0.\nФормат записи инструкций (в одну строку):\nинтстр1 операнд1, операнд2, операнд3|интстр2 операнд4, операнд5, операнд6\nОбратите внимание на расстановку пробелов. Имена регистров начинаются со знака $.",
    "answer": "slt $t0, $s1, $s0|bne $t0, $zero, L"
  },
  {
    "week": 8,
    "question": "Реализация инструкции IINC на архитектуре Mic-2 (IFU + 3-шинная архитектура), как было\nпоказано в лекции, позволяет сэкономить N циклов по сравнению с реализацией для Mic1.\nУказание. Ответ (число N) дайте с помощью цифр.",
    "answer": "4"
  },
  {
    "week": 8,
    "question": "Закодируйте сообщение 01001 кодом проверки чётности.\nЗамечание: бит проверки чётности дописывается справа. Следует указать полное кодовое\nслово в двоичной системе.",
    "answer": "010010"
  },
  {
    "week": 8,
    "question": "Каково максимальное значение целого числа со знаком, которое может храниться в 4-\nбитной ячейке в системе со смещением на 7.",
    "answer": "8"
  },
  {
    "week": 8,
    "question": "Закодируйте слово \"0010\" с помощью (7,4)-кода Хэмминга.",
    "answer": "0101010"
  },
  {
    "week": 8,
    "question": "Закодируйте сообщение 01011 кодом проверки чётности.\nЗамечание: В качестве ответа укажите только значение дописываемого бита проверки\nчётности.",
    "answer": "1"
  },
  {
    "week": 8,
    "question": "Чтобы контролировать (не исправляя) 8 ошибок в каждом сообщении, необходимо\nвыбрать помехоустойчивый код, минимальное кодовое расстояние (расстояние\nХэмминга) которого не меньше…\nУказание: ответ записать цифрами.",
    "answer": "9"
  },
  {
    "week": 8,
    "question": "Установите соответствие между понятиями, используемыми в языке ассемблера и их\nобозначениями в программе.\nОбратите внимание, что это термины из используемого на лабораторных занятиях набора\nинструментов ассемблирования Свободного университета Амстердама.\nдиректива (псевдокоманда) .SECT .BSS\nметка BEG:\nмнемоника (инструкция) MOV AX, BX",
    "answer": "директива (псевдокоманда) → .SECT .BSS, метка → BEG:, мнемоника\n(инструкция) → MOV AX, BX"
  },
  {
    "week": 8,
    "question": "По каналу связи принято следующее сообщение, закодированное (7,4)-кодом Хэмминга:\n1110101. Запишите номер позиции, считая с одного, в которой произошла ошибка или 0,\nесли таковой не было.",
    "answer": "2"
  },
  {
    "week": 8,
    "question": "По каналу связи принято следующее сообщение, закодированное (7,4)-кодом Хэмминга:\n0100001. Запишите номер позиции, считая с одного, в которой произошла ошибка или 0,\nесли таковой не было.",
    "answer": "5"
  },
  {
    "week": 8,
    "question": "Понятие системы разделения времени относится к:",
    "answer": "операционным системам, предоставлявшим доступ одновременно\nнескольким пользователям посредством терминалов"
  },
  {
    "week": 8,
    "question": "Кодовое слово (7,4)-кода Хэмминга (так же, как и других кодов этого семейства)\nполучается как результат некоторого линейного преобразования. Обозначим\nинформационный вектор d, соответствующее ему кодовое слово c, тогда существует\nматрица G, такая что d·G = c. (Обратите внимание, что информационное сообщение при\nкодировании принято писать слева от матрицы, в отличие от принятого по каналу слова\nпри умножении на проверочную матрицу). Запишите элементы этой матрицы в следующем\nпорядке: по столбцам слева-направо и внутри каждого столбца сверху-вниз.\nПример:\nМатрица\n1 0 0 1\n0 1 0 1\n0 0 1 1\nзаписывается так: 100010001111.\nЗамечание. Учтите, что существует несколько подходов к описанию кодов Хэмминга, и\nдля каждого подхода матрицы будут отличаться. Следует записать матрицу,\nсоответствующую подходу, который был продемонстрирован на лекции (когда биты\nпроверки чётности оказываются на позициях 2 ).",
    "answer": "1101101110000111010000100001"
  },
  {
    "week": 8,
    "question": "Чтобы контролировать (не исправляя) 8 ошибок в каждом сообщении, необходимо\nвыбрать помехоустойчивый код, минимальное кодовое расстояние (расстояние\nХэмминга) которого не меньше…\nУказание: ответ записать цифрами.",
    "answer": "9"
  },
  {
    "week": 8,
    "question": "Закодируйте слово \"1100\" с помощью (7,4)-кода Хэмминга.",
    "answer": "0111100"
  },
  {
    "week": 8,
    "question": "По каналу связи принято следующее сообщение, закодированное (7,4)-кодом Хэмминга:\n0100001. Запишите номер позиции, считая с одного, в которой произошла ошибка или 0,\nесли таковой не было.",
    "answer": "5"
  },
  {
    "week": 8,
    "question": "По каналу связи принято следующее сообщение, закодированное (7,4)-кодом Хэмминга:\n1110101. Запишите номер позиции, считая с одного, в которой произошла ошибка или 0,\nесли таковой не было.",
    "answer": "2"
  },
  {
    "week": 8,
    "question": "Отличие L1-кэша от следующих уровней кэша в последних процессорах Intel состоит в",
    "answer": "разделении памяти на две равные области: кэш для данных и кэш для\nинструкций"
  },
  {
    "week": 8,
    "question": "Рассмотрим следующий фрагмент кода на языке ассемблера.\n MOV CX, 10\nlp:\n ADD BX, CX\n LOOP lp\n MOV AX, 42\nЗначение регистра CX непосредственно перед выполнением последней инструкции этого\nфрагмента равно:",
    "answer": "0"
  },
  {
    "week": 8,
    "question": "Как можно определить значение бита проверки чётности для сообщения (d , …, d )?\n(Все операции подразумеваются по модулю 2, p - значение бита четности.)\nВыберите один или несколько ответов:",
    "answer": "как значение E^k(i=1)di, из уравнения E^k(i=1)di + p = 0"
  },
  {
    "week": 8,
    "question": "Сообщение, закодированное кодом троекратного повторения и сохранённое на жёстком\nдиске, с течением времени превратилось в последовательность: 101000101010.\nВосстановите исходное сообщение (до кодирования) в предположении, что количество\nошибок не превосходило возможностей исправления данного кода.",
    "answer": "1010"
  },
  {
    "week": 8,
    "question": "Рассмотрим реализацию процедуры swap, которая меняет местами значения по двум\nданным ей адресам.\nSWAP:\n PUSH BP\n MOV BP, SP\n PUSH DI\n PUSH SI\n\n MOV SI, 4(BP)\n MOV DI, 6(BP)\n\n MOV AX, (SI)\n MOV DX, (DI)\n MOV (SI), DX\n MOV (DI), AX\n\n POP SI\n POP DI\n POP BP\n RET\nЕсли предположить, что реализация процедуры корректна и допущено не более одного\nнарушения конвенции вызова cdecl, то это нарушение заключается в том, что…",
    "answer": "нарушений конвенций cdelc нет"
  },
  {
    "week": 8,
    "question": "Одно из важных отличий RAID уровня 1 от RAID уровня 0 относится к характеристике\nнадёжности, а именно,\nВыберите один ответ:",
    "answer": "RAID уровня 1 более надёжен, чем RAID уровня 0"
  },
  {
    "week": 8,
    "question": "Всеобщий переход от использования ламп к использованию транзисторов связан с тем,\nчто последние по сравнению с первыми:",
    "answer": "всё вышеперечисленное."
  },
  {
    "week": 8,
    "question": "Установите соответствие между понятиями, используемыми в языке ассемблера и их\nобозначениями в программе.\nОбратите внимание, что это термины из используемого на лабораторных занятиях набора\nинструментов ассемблирования Свободного университета Амстердама.\nмнемоника (инструкция) MOV AX, BX\nметка BEG:\nдиректива (псевдокоманда) .SECT .BSS",
    "answer": "Правильный ответ: мнемоника (инструкция) → MOV AX, BX, метка → BEG:, директива\n(псевдокоманда) → .SECT .BSS"
  },
  {
    "week": 8,
    "question": "Запишите число 21,75 в формате с фиксированной точкой, если известно что под целую\nчасть отведено 6 двоичных разрядов, а под дробную часть выделено 4 разряда. В ответе\nдолжна быть последовательность из 0 и 1, всего 10 двоичных цифр без каких либо\nразделителей.",
    "answer": "0101011100"
  },
  {
    "week": 8,
    "question": "(3,1)-код Хэмминга совпадает с",
    "answer": "кодом троекратного повторения"
  },
  {
    "week": 8,
    "question": "Юный микропрограммист Илья решил для тренировки переписать реализацию\nинструкции POP набора инструкций IJVM для микроархитектуры Mic-1. Первую\nмикрокоманду он уже написал: MAR=SP=SP-1;rd, дальше он вставил пустой цикл, чтобы\nдождаться данных из памяти. Допишите за него следующую микрокоманду.\nУказание: запись микрокоманды не должна содержать пробелов, а необходимую часть\nперехода к основному циклу (goto Main1) следует опустить.",
    "answer": "TOS=MDR"
  },
  {
    "week": 8,
    "question": "Является ли множество кодовых слов кода N-кратного повторения для некоторого K\nлинейным подпространством пространства {0,1} ?",
    "answer": "Да, для всех натуральных N."
  },
  {
    "week": 8,
    "question": "Рассмотрите текущее состояние процессора и выполняемую программу в окне трасёра\nt88:\nKN\nКаково будет следующее значение регистра PC (он же - регистр IP) после нажатия\nклавиши Enter в трасёре?\nЗамечание: конечно, ответ на этот вопрос можно найти с помощью трасёра, однако\nрекомендуется получить его в уме – вся необходимая информация приведена на рисунке.",
    "answer": "0007"
  },
  {
    "week": 8,
    "question": "В памяти долгое время хранится кодовое слово, закодированное (7,4)-кодом Хэмминга.\nПосле очередного обращения к этому участку памяти были считаны следующие 7 бит:\n0100001. Определите исходные 4 бита информации (то есть проведите декодирование).",
    "answer": "0101"
  },
  {
    "week": 8,
    "question": "По каналу связи принято следующее сообщение, закодированное (7,4)-кодом\nХэмминга: 1110001. Запишите номер позиции, считая с одного, в которой произошла\nошибка или 0, если таковой не было.",
    "answer": "7"
  },
  {
    "week": 8,
    "question": "Расположение микрокоманд в ПЗУ процессора отличается от расположения инструкций\nпроцессора в скомпилированной программе, загруженной в оперативную память, тем, что\nпервые",
    "answer": "расположены в фиксированной последовательности, а порядок\nисполнения определяется содержимым микрокоманды и динамическими условиями"
  },
  {
    "week": 9,
    "question": "Расставьте в правильном порядке этапы, выполняемые операционной системой при\nсоздании процесса.\n1 Формирование PID\n2 Добавление новой записи в таблицу процессов\n3 Выделение памяти под процесс\n4 Формирование управляющего блока процесса",
    "answer": "1 → Формирование PID, 2 → Добавление новой записи в таблицу\nпроцессов, 3 → Выделение памяти под процесс, 4 → Формирование управляющего блока\nп"
  },
  {
    "week": 9,
    "question": "Для реализации многозадачности в вычислительной системе необходимо наличие\nнескольких процессоров.",
    "answer": "Неверно"
  },
  {
    "week": 9,
    "question": "В чем заключаются две основные функции операционной системы персональных компьютеров?",
    "answer": "Управление ресурсами вычислительной системы, Организация\nинтерфейса с пользователем"
  },
  {
    "week": 9,
    "question": "Если UNIX-подобной операционной системой пользуется только один человек, один\nпользователь с логином stud, можно ли сказать, что все процессы будут в PCB иметь в\nполе \"Идентификатор пользователя\" только stud?",
    "answer": "Неверно"
  },
  {
    "week": 9,
    "question": "Укажите общепринятое название процессов, работающих в фоновом режиме, в UNIXподобных операционных системах.",
    "answer": "демон"
  },
  {
    "week": 9,
    "question": "Отметьте, что из указанного ниже, входит в управляющий блок процесса в Unix-подобных ОС",
    "answer": "Идентификатор процесса, Идентификатор родительского процесса, Адрес сегмента кода процесса, Текущее состояние регистров"
  },
  {
    "week": 9,
    "question": "Какие переходы процесса из одного состояния в другое отражаются в PCB?",
    "answer": "Переход из состояния \"готов\" в состояние \"выполняется\", Переход из состояния \"выполняется\" в состояние \"заблокирован\", Переход из состояния \""
  },
  {
    "week": 9,
    "question": "Сопоставьте разные по структуре реализации операционных систем с их свойствами\nВ памяти постоянно находится лишь незначительная\nчасть программ, относящихся к операционной системе.\nОстальные подгружаются по запросам\nмикроядро\nПроцедуры операционной системы иерархически\nупорядочены. Пользователю доступны только вызовы\nпроцедур верхнего уровня\nмногоуровневые системы\nВся операционная система работает в режиме ядра\nмонолитные системы",
    "answer": "В памяти постоянно * → микроядро, Процедуры операционной системы * → многоуровневые системы, Вся операционная система работает в режиме яд"
  },
  {
    "week": 9,
    "question": "В чем заключаются две основные функции операционной системы персональных\nкомпьютеров?",
    "answer": "Управление ресурсами вычислительной системы, Организация интерфейса с пользователем"
  },
  {
    "week": 9,
    "question": "Отметьте, что из указанного ниже, входит в управляющий блок процесса в Unix-подобных ОС",
    "answer": "Идентификатор процесса, Идентификатор родительского процесса, Адрес сегмента кода процесса, Текущее состояние регистров"
  },
  {
    "week": 9,
    "question": "Если UNIX-подобной операционной системой пользуется только один человек, один\nпользователь с логином stud, можно ли сказать, что все процессы будут в PCB иметь в\nполе \"Идентификатор пользователя\" только stud?",
    "answer": "Неверно"
  },
  {
    "week": 9,
    "question": "Для реализации многозадачности в вычислительной системе необходимо наличие нескольких процессоров.",
    "answer": "Неверно"
  },
  {
    "week": 10,
    "question": "Пусть вычислительная система обрабатывает задания в пакетном режиме. В настоящий момент в системе присутствуют 5 заданий. Все они готовы к выполнению. Время выполнения каждого задания известно. Задание A выполняется за 7 с, B за 3, C за 2, D за 1, E за 4 с. Все процессы без операций ввода-вывода и каких-либо других блокировок. Укажите, какое из заданий планировщик процессов запустит последним, если он настроен на достижение минимального среднего оборотного времени?",
    "answer": "A"
  },
  {
    "week": 10,
    "question": "Рассмотрите следующий код на языке C.\nmain( )\n{\nfork( );\nfork( );\n}\nСколько дочерних процессов создается во время исполнения этой программы?\nУказание: следует ввести число (в десятичной системе счисления)",
    "answer": "3"
  },
  {
    "week": 10,
    "question": "При выполнении функции pthread_create() операционная система выделяет в адресном пространстве новый фрагмент и создает новый PCB.",
    "answer": "Неверно"
  },
  {
    "week": 10,
    "question": "Пусть вычислительная система обрабатывает задания в пакетном режиме. В настоящий момент в систему поступили 5 заданий, время выполнения каждого задания известно. Задание A выполняется за 7 с, B за 13, C за 2, D за 11, E за 4 с. Все задания без блокировок и готовы к запуску. Расположите задания в том порядке, в котором их будет запускать планировщик, настроенный на достижение минимального среднего оборотного времени.",
    "answer": "1 → C, 2 → E, 3 → A, 4 → D, 5 → B"
  },
  {
    "week": 10,
    "question": "Пусть вычислительная система обрабатывает задания в пакетном режиме. В настоящий момент в системе присутствуют 5 заданий. Все они готовы к выполнению. Время выполнения каждого задания известно. Задание A выполняется за 7 с, B за 3, C за 2, D за 1, E за 4 с. Для достижения минимального из возможных среднего оборотного времени планировщик должен запустить на выполнение одно из заданий. Какое?",
    "answer": "D"
  },
  {
    "week": 10,
    "question": "Алгоритм Петерсона, предложенный в 1981 году, является модификацией другого программного примитива синхронизации процессов. Укажите, какого именно?",
    "answer": "Алгоритма строгого чередования, Алгоритма Деккера"
  },
  {
    "week": 10,
    "question": "Укажите какие из перечисленных ниже операций выполняются в интерактивных системах с простым циклическим квантованием в момент, когда заканчивается выделенный процессу квант времени и происходит запуск другого процесса из числа готовых к выполнению.",
    "answer": "сохранение регистров вытесняемого процесса , \nзагрузка регистров для запускаемого процесса ,\nобновление списка готовых к исполнению процессов ,\nотображение кэш-линеек вытесняемого процесса в оперативную память"
  },
  {
    "week": 5,
    "question": "Используя те же соглашения, которые позволили записать число 1.0 в виде 3F800000 (представление числа с плавающей точкой одинарной точности в стандарте IEEE 754), запишите представление отрицательного числа: -1.5.",
    "answer": "BFC00000"
  },
  {
    "week": 5,
    "question": "Пусть разрядность условного компьютера составляет 6 битов. Число -5 (из десятичной системы счисления) преобразовали в двоичную систему счисления в соответствии с тремя разными способами представления чисел. Укажите, какому из способов соответствуют полученные представления .",
    "answer": "100101 знаковый бит\n111011 дополнительный код\n011010 6-разрядная система со смещением 31"
  },
  {
    "week": 5,
    "question": "К какому из типов чисел, согласно стандарту IEEE 754, относится результат сложения плюс бесконечности и минус бесконечности?",
    "answer": "Не число"
  },
  {
    "week": 5,
    "question": "8-разрядное число -1 в дополнительном коде представляется следующим образом.",
    "answer": "11111111"
  },
  {
    "week": 5,
    "question": "Во всех трёх рассмотренных представлениях целых чисел со знаком старший бит имеет особый смысл, связанный со знаком числа, однако",
    "answer": "в представлении со смещением на 2m-1 этот смысл противоположен дополнительному коду и представлению со знаковым битом"
  },
  {
    "week": 5,
    "question": "Каково максимальное значение целого числа со знаком, которое может храниться в 4-битной ячейке в системе со смещением на 7.",
    "answer": "8"
  },
  {
    "week": 5,
    "question": "Какая структура данных из перечисленных ниже лучше всего соответствует способу хранения последовательности микрокоманд в памяти управляющего устройства процессора (в том числе, это имеет место для примерной микроархитектуры Mic-1)?",
    "answer": "линейный односвязный список (с хранением адреса следующей команды, который, правда, может корректироваться с учётом динамических условий)"
  },
  {
    "week": 5,
    "question": "В восьмиразрядной системе представления чисел в дополнительном коде записали число -13. Затем применили к нему инструкцию побитового сдвига вправо (SHR) на 3 разряда. Запишите полученный результат в двоичном представлении. (В ответе должна быть только последовательность из 0 и 1 (всего 8 знаков), без каких-либо дополнительных разделительных символов).",
    "answer": "00011110"
  },
  {
    "week": 5,
    "question": "Какое из следующих представлений целых чисел со знаком обладает тем преимуществом, что процедура сравнения «на меньше» чисел, представленных в этой форме, совпадает с процедурой сравнения беззнаковых двоичных целых чисел?",
    "answer": "представление со смещением"
  },
  {
    "week": 4,
    "question": "Имя (мнемоника) инструкции архитектуры x86, которая кладёт на стек адрес следующей за ней в программе инструкции и осуществляет безусловный переход по указанной ей метке.",
    "answer": "call"
  },
  {
    "week": 4,
    "question": "Название российской фирмы-производителя высокопроизводительных систем, дочерним проектом которой является «Байкал Электроникс», приступившей в 2015 году к выпуску MIPS-процессоров.",
    "answer": "Т-Платформы"
  },
  {
    "week": 4,
    "question": "Технология виртуализации данных, обозначающая проектирование многодисковых систем хранения. Используется для обеспечения роста параллелизма (для ускорения операций чтения-записи) и/или повышения надёжности (за счет избыточности).\n\nСледует указать только аббревиатуру этой технологии (латинскими буквами).",
    "answer": "RAID"
  },
  {
    "week": 4,
    "question": "В архитектуре MIPS адрес размещенного в памяти слова",
    "answer": "кратен 4"
  },
  {
    "week": 4,
    "question": "Верхние три уровня иерархии памяти (регистры, кэш и оперативная память) отличаются от последующих тем, что они относятся к",
    "answer": "энергозависимой памяти"
  },
  {
    "week": 4,
    "question": "Отметьте все регистры, которые могут быть использованы для косвенной регистровой адресации в ассемблере.",
    "answer": "BX, DI, SI"
  },
  {
    "week": 4,
    "question": "Какой из стилей взаимодействия с подсистемой ввода-вывода наиболее часто приводит к продолжительным простоям процессора?",
    "answer": "программируемый ввод-вывод"
  },
  {
    "week": 4,
    "question": "Укажите название регистра, хранящего адрес кадра стека текущей подпрограммы в архитектуре MIPS.\n\nЗамечание. Кадром стека подпрограммы называется область стека, в которой хранятся адрес возврата, а также аргументы (если они передаются в стеке) и локальные переменные (если они есть) подпрограммы.",
    "answer": "$FP"
  },
  {
    "week": 4,
    "question": "Название микросхемы в составе чипсета, которая связывает более медленные устройства ввода-вывода на одной шине с другими компонентами персональных компьютеров на материнских платах для процессоров Intel в 2000-х годах.",
    "answer": "южный мост"
  },
  {
    "week": 4,
    "question": "Предположим, что требуется совершить переход по метке L при условии, что значение в регистре $s0 больше, чем в регистре $s1. Запишите MIPS-инструкции для осуществления этой логики. В качестве хранилища промежуточного результата можно использовать только регистр $t0.\n\nФормат записи инструкций (в одну строку):\n\nинтстр1 операнд1, операнд2, операнд3|интстр2 операнд4, операнд5, операнд6\nОбратите внимание на расстановку пробелов. Имена регистров начинаются со знака $.",
    "answer": "slt $t0, $s1, $s0|bne $t0, $zero, L"
  },
  {
    "week": 3,
    "question": "Одна из первых успешных RISC-архитектур носила название MIPS, что официально расшифровывалось как Microprocessor without Interlocked Pipeline Stages. Однако сложно считать простым совпадением, что эта аббревиатура повторяет широко известную аббревиатуру характеристики процессоров, которая была сильной стороной RISC-архитектур и расшифровывалась как",
    "answer": "Million instructions per second"
  },
  {
    "week": 3,
    "question": "Память некоторого компьютера имеет размер ячейки («байта») в 3 бита, размер слова — в 4 ячейки (\"байта\") и обратный (little) порядок \"байтов\" в слове. Запишите двоичное представление слова этого компьютера, содержащего число 321.\n\nНапоминание: внутри байта биты располагаются в «привычном» (прямом) порядке, где биты, отвечающие за младшие разряды, идут справа от старших.\n\nУказание: в ответе должна содержаться последовательность из 0 и 1 (всего 12 цифр) без пробелов и других символов.",
    "answer": "001000101000"
  },
  {
    "week": 3,
    "question": "Одно из важных отличий RAID уровня 1 от RAID уровня 0 относится к характеристике надёжности, а именно,",
    "answer": "RAID уровня 1 более надёжен, чем RAID уровня 0"
  },
  {
    "week": 3,
    "question": "В некотором 16-разрядном компьютере имеется один уровень кэша размером 3 Мб, который использует кэш-линии длиной 256 байт (байты считаются 8-битными). Предположим, что процессор пытается прочесть слово, которое отсутствует в кэше. В этой ситуации из оперативной памяти в кэш подгружается",
    "answer": "256 байт"
  },
  {
    "week": 3,
    "question": "Реализация отдельных модулей обработки инструкций аппаратно и внутри одной микросхемы (микропроцессора) привела к",
    "answer": "всему вышеперечисленному"
  },
  {
    "week": 3,
    "question": "Роль преамбулы сектора жёсткого диска состоит, в том числе в",
    "answer": "упрощении процесса позиционирования головки"
  },
  {
    "week": 3,
    "question": "Некоторый жёсткий диск имеет следующие габариты в геометрии CHS: 8x4x10. Для доступа к этому жёсткому диску предполагается использовать некоторый параллельный интерфейс. Какова должна быть минимальная пропускная способность этого интерфейса в битах, чтобы для передачи адреса на контроллер жёсткого диска не приходилось использовать операции серализации-десериализации? (Предполагается, что для адресации на диске используется то же пространство CHS, а не, к примеру, линейные адреса).",
    "answer": "9"
  },
  {
    "week": 3,
    "question": "Внутренние регистры процессора доступны на уровне",
    "answer": "микроархитектуры"
  },
  {
    "week": 3,
    "question": "Политики замещения кэш-линеек становятся неактуальными в",
    "answer": "кэше с прямым отображением"
  },
  {
    "week": 3,
    "question": "Традиционная аббревиатура регистра, в котором хранится текущая команда процессора",
    "answer": "IR"
  },
  {
    "week": 6,
    "question": "Если IFU находился в состоянии 4 (следуя схеме конечного автомата, приведённой на последнем слайде лекции 9), то чтение регистра MBR2 переведёт его в состояние:\nУказание. В качестве ответа укажите цифру - номер нового состояния.",
    "answer": "2"
  },
  {
    "week": 6,
    "question": "Напишите либо код, либо мнемонику инструкции, ответственной за вызов подпрограмм в ассемблере Mic-1.",
    "answer": "0xB6"
  },
  {
    "week": 6,
    "question": "Модификация микроархитектуры Mic-1 до трёхшинной архитектуры могла бы...\nЗамечание. Слово «защёлка» следует понимать как синоним слова «регистр».",
    "answer": "сократить число микрокоманд для обработки одной инструкции уровня ISA"
  },
  {
    "week": 6,
    "question": "Реализация инструкции IINC на архитектуре Mic-2 (IFU + 3-шинная архитектура), как было показано в лекции, позволяет\nсэкономить N циклов по сравнению с реализацией для Mic-1.\nУказание. Ответ (число N) дайте с помощью цифр.",
    "answer": "4"
  },
  {
    "week": 6,
    "question": "В последовательности микрокоманд, необходимых для выполнения очередной инструкции процессора, возможны\nветвления за счёт\nУкажите все возможные варианты правильных ответов.",
    "answer": "специализированных полей бинарного формата микрокоманды, учёта флагов АЛУ"
  },
  {
    "week": 6,
    "question": "Юный микропрограммист Илья решил для тренировки переписать реализацию инструкции POP набора инструкций IJVM\nдля микроархитектуры Mic-1. Первую микрокоманду он уже написал: MAR=SP=SP-1;rd, дальше он вставил пустой цикл,\nчтобы дождаться данных из памяти. Допишите за него следующую микрокоманду.\nУказание: запись микрокоманды не должна содержать пробелов, а необходимую часть перехода к основному циклу (goto\nMain1) следует опустить.",
    "answer": "TOS=MDR"
  },
  {
    "week": 6,
    "question": "Запишите последовательность из двух микрокоманд, которая реализует инструкцию DUP, то есть дублирует слово на\nвершине стека.\nПример. Стек до операции 42 ← 41 ← 40 (вершина стека расположена слева и равна 42). Стек после операции: 42 ←\n42 ← 41 ← 40\nМикрокоманды должны записываться без пробелов и разделяться символом |. Не забудьте выполнить переход к началу\nследующего цикла (goto Main1) после нужных действий.",
    "answer": "MAR=SP=SP+1|MDR=TOS;wr;goto Main1"
  },
  {
    "week": 6,
    "question": "Блок предварительной выборки инструкций на процессоре позволяет в том или ином смысле воплотить следующие идеи\nускорения работы:",
    "answer": "параллельное исполнение, сокращение числа циклов на одну инструкцию"
  },
  {
    "week": 6,
    "question": "Глядя на описание ассемблера IJVM, назовите адрес первой микрокоманды, которая реализует инструкцию создания\nкопии слова, расположенного на вершине стека. Вопрос относится к реализации IJVM именно на микроархитектуре Mic-1.\nАдреса обычно имеют вид 0x00.Укажите адрес в таком же формате.",
    "answer": "0x59"
  },
  {
    "week": 6,
    "question": "Добавление синхронных защёлок между разными стадиями работы тракта данных позволит",
    "answer": "организовать конвейер"
  },
  {
    "week": 6,
    "question": "Если IFU находился в состоянии 4 (следуя схеме конечного автомата, приведённой на последнем слайде лекции 9), то\nчтение регистра MBR2 переведёт его в состояние:",
    "answer": "2"
  },
  {
    "week": 6,
    "question": "Запишите последовательность из двух микрокоманд, которая позволяет увеличить слово с вершины стека, на единицу.\nПомните, что значение с вершины стека всегда хранится в двух местах: в регистре TOS и в оперативной памяти по\nадресу, заданному регистром SP.\nОтвет не должен содержать пробелов, кроме как перед именем метки в команде goto. Две микрокоманды следует\nразделить символом ‘|’ (без кавычек).",
    "answer": "TOS=MDR=TOS+1|MAR=SP;wr;goto Main1"
  },
  {
    "week": 6,
    "question": "Глядя на полную микропрограмму для Mic-1 в синтаксисе микроассемблера MAL определите количество микрокоманд,\nнеобходимых для выполнения инструкции POP из набора инструкций IJVM.",
    "answer": "3"
  },
  {
    "week": 6,
    "question": "Бинарный код инструкции уровня ISA, передаваемый на процессор, обычно указывает… (возможно несколько ответов:\nследует отметить все верные).\nЗамечание. Для ответа на этот вопрос можно, к примеру, проанализировать приведённую ниже таблицу с кодами IJVM.",
    "answer": "значение операндов или их местонахождение, адрес следующей операции, тип операции"
  },
  {
    "week": 6,
    "question": "Глядя на описание ассемблера IJVM, назовите адрес первой микрокоманды,\nкоторая реализует инструкцию создания копии слова, расположенного на вершине\nстека. Вопрос относится к реализации IJVM именно на микроархитектуре Mic-1.\nАдреса обычно имеют вид 0x00.Укажите адрес в таком же формате.",
    "answer": "0x59"
  },
  {
    "week": 6,
    "question": "Бинарный код инструкции уровня ISA, передаваемый на процессор, обычно\nуказывает… (возможно несколько ответов: следует отметить все верные).\nЗамечание. Для ответа на этот вопрос можно, к примеру, проанализировать\nприведённую ниже таблицу с кодами IJVM.",
    "answer": "адрес следующей операции, тип операции"
  },
  {
    "week": 6,
    "question": "Пустые циклы ожидания данных из памяти в микроархитектуре Mic-1 можно\nиспользовать для",
    "answer": "досрочного исполнения заголовка цикла микропрограммы"
  },
  {
    "week": 6,
    "question": "Добавление синхронных защёлок между разными стадиями работы тракта данных\nпозволит",
    "answer": "организовать конвейер"
  },
  {
    "week": 6,
    "question": "Модификация микроархитектуры Mic-1 до трёхшинной архитектуры\nмогла бы...\nЗамечание. Слово «защёлка» следует понимать как синоним слова «регистр».",
    "answer": "сократить число микрокоманд для обработки одной инструкции уровня ISA"
  },
  {
    "week": 6,
    "question": "Пустые циклы ожидания данных из памяти в микроархитектуре Mic-1 можно использовать для",
    "answer": "досрочного исполнения заголовка цикла микропрограммы"
  },
  {
    "week": 6,
    "question": "В примерной микроархитектуре Mic-1 предполагалось кодирование управляющего сигнала для шины B. Почему такой же\nприём не был применён для управления шиной C?",
    "answer": "Для управления шиной C иногда нужно указывать сразу несколько активных регистров — в отличие от шины B."
  },
  {
    "week": 6,
    "question": "Рассмотрим полную микропрограмму для Mic-1 в синтаксисе микроассемблера MAL. Укажите директиву, которая\nзаставляет микроассемблер помещать инструкцию с указанной меткой по указанному адресу.\nЗаметим, что эта директива обычно используется для того, чтобы адрес первой микрокоманды в последовательности\nмикрокоманд, реализующих инструкцию X из набора инструкций IJVM, совпадал с бинарным кодом инструкции X.",
    "answer": ".label"
  },
  {
    "week": 6,
    "question": "Файл конфигурации ассемблера ijvm.conf из \"пакета юного микропрограммиста\" имеет строгий и простой формат: он разделён на две колонки. В первой колонке указываются:",
    "answer": "коды инструкций IJVM"
  },
  {
    "week": 6,
    "question": "Дан следующий код на IJVM с номерами строчек в первом столбце.\n1 ILOAD j\n2 ILOAD n\n3 ISUB\n4 BIPUSH 7\n5 ISUB\n6 DUP\n7 IADD\n8 ISTORE i\nПредположим, что мы расширили набор инструкций IJVM, добавив микропрограммную реализацию новой инструкции\nUMUL: она работает аналогично IADD, но выполняет не сложение, а умножение, т. е. инструкция UMUL перемножает два\nслова, лежащие на стеке, и кладёт результат на стек в предположении, что исходные два слова представляют\nнеотрицательные числа.\nВнимательно изучите приведённый выше фрагмент программы и укажите какие инструкции (подсказка, их всего 2)\nследует заменить, на BIPUSH и UMUL (возможно с дополнительными аргументами), чтобы новая программа давала в\nточности те же результаты, что и предыдущая. Указание, в ответе должны быть два номера строк, перечисленные через\nзапятую.",
    "answer": "6,7"
  },
  {
    "week": 6,
    "question": "В последовательности микрокоманд, необходимых для выполнения очередной инструкции\nпроцессора, возможны ветвления за счёт.\nУкажите все возможные варианты правильных ответов.",
    "answer": "специализированных полей бинарного формата микрокоманды, учёта флагов АЛУ"
  },
  {
    "week": 6,
    "question": "Бинарный код инструкции уровня ISA, передаваемый на процессор, обычно указывает…\n(возможно несколько ответов: следует отметить все верные).\nЗамечание. Для ответа на этот вопрос можно, к примеру, проанализировать приведённую ниже\nтаблицу с кодами IJVM.",
    "answer": "адрес следующей операции, тип операции, значение операндов или их местонахождение"
  },
  {
    "week": 6,
    "question": "Блок предварительной выборки инструкций на процессоре позволяет в том или ином смысле\nвоплотить следующие идеи ускорения работы:",
    "answer": "параллельное исполнение, сокращение числа циклов на одну инструкцию"
  },
  {
    "week": 6,
    "question": "Юный микропрограммист Илья решил для тренировки переписать реализацию инструкции\nPOP набора инструкций IJVM для микроархитектуры Mic-1. Первую микрокоманду он уже\nнаписал: MAR=SP=SP-1;rd, дальше он вставил пустой цикл, чтобы дождаться данных из памяти.\nДопишите за него следующую микрокоманду. Указание: запись микрокоманды не должна\nсодержать пробелов, а необходимую часть перехода к основному циклу (goto Main1) следует\nопустить.",
    "answer": "TOS=MDR"
  },
  {
    "week": 6,
    "question": "В примерной микроархитектуре Mic-1 предполагалось кодирование управляющего сигнала\nдля шины B. Почему такой же приём не был применён для управления шиной C?",
    "answer": "Для управления шиной C иногда нужно указывать сразу несколько активных регистров — в\nотличие от шины B."
  },
  {
    "week": 6,
    "question": "Блок предварительной выборки инструкций на процессоре позволяет в том или\nином смысле воплотить следующие идеи ускорения работы:",
    "answer": "параллельное исполнение, сокращение числа циклов на одну инструкцию"
  },
  {
    "week": 6,
    "question": "Если IFU находился в состоянии 4 (следуя схеме конечного автомата, приведённой на последнем слайде лекции 9), то\nчтение регистра MBR2 переведёт его в состояние:\nУказание. В качестве ответа укажите цифру - номер нового состояния.",
    "answer": "2"
  },
  {
    "week": 5,
    "question": "Запишите число 21,75 в формате с фиксированной точкой, если известно что под целую часть отведено 6 двоичных разрядов, а под дробную часть выделено 4 разряда. В ответе должна быть последовательность из 0 и 1, всего 10 двоичных цифр без каких либо разделителей.",
    "answer": "0101011100"
  },
  {
    "week": 5,
    "question": "Сколько нулей (сколько вариантов представления числа 0) имеется в m-разрядной системе со смещением?",
    "answer": "1"
  },
  {
    "week": 6,
    "question": "Запишите мнемонику инструкции IJVM, которая соответствует JMP в x86.",
    "answer": "GOTO"
  },
  {
    "week": 6,
    "question": "Глядя на описание ассемблера IJVM, назовите адрес первой микрокоманды, которая реализует инструкцию создания копии слова, расположенного на вершине стека. Вопрос относится к реализации IJVM именно на микроархитектуре Mic-1. Адреса обычно имеют вид 0x00.Укажите адрес в таком же формате.",
    "answer": "0x59"
  },
  {
    "week": 7,
    "question": "Расположение микрокоманд в ПЗУ процессора отличается от расположения инструкций процессора в скомпилированной программе, загруженной в оперативную память, тем, что первые",
    "answer": "расположены в фиксированной последовательности, а порядок исполнения определяется содержимым микрокоманды и динамическими условиями"
  },
  {
    "week": 7,
    "question": "На входных линиях 3-мультиплексора имеется следующий сигнал (нумерация контактов слева—направо): 01001110, на управляющих линиях (младшие биты слева): 001. Каково значение выходного сигнала?",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Укажите размер памяти (в битах), который можно \"представить\" одной синхронной D-защелкой (в качестве ответа введите только число).",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Рассмотрите схему синхронной D-защелки. Если все вентили сделаны по схемам, указанным в лекции 10, то сколько транзисторов понадобится для изготовления синхронной D-защелки. Вентиль AND выполнен через вентили NAND и инвертор (NOT) (в качестве ответа указать число цифрами).",
    "answer": "11"
  },
  {
    "week": 7,
    "question": "Простейшее одноразрядное АЛУ представляет из себя среднюю интегральную схему, реализующую три логических и одну арифметическую операцию. Чтобы указать, какую именно операцию нужно выполнить в данный момент, АЛУ имеет две входные линии, принимающие номер нужной команды. Вспомогательная схема в составе АЛУ преобразует этот номер в сигнал на одной из четырёх линий, открывающий путь результату соответствующей операции на выходную линию АЛУ. Как называется эта вспомогательная схема?",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Кодер — это простейшая интегральная схема, обратная декодеру (по аналогии с мультиплексором/демультиплексором), по одной сигнализированной линии она выдаёт номер этой линии. Если конфигурация входных линий 2-кодера выглядит так: D0=0, D1=1, D2=0, D3=0, то как выглядит конфигурация на выходных линиях F0, F1?\n\nУказание: ответ даётся двоичным числом, записанным, начиная со старших разрядов (F1F0).",
    "answer": "01"
  },
  {
    "week": 7,
    "question": "Тактовые генераторы, у которых время существования импульса с высоким уровнем равно времени существования импульса с низким уровнем называются",
    "answer": "синхронными"
  },
  {
    "week": 7,
    "question": "Класс микросхем энергонезависимой памяти с однократной записью, которые можно запрограммировать вне завода производителя, называется…\n\nУказание: ответ — аббревиатура на английском.",
    "answer": "PROM"
  },
  {
    "week": 7,
    "question": "Современный способ реализации регистров памяти процессора предполагает использование",
    "answer": "параллельного подключения нескольких триггеров (например, D-триггеров)"
  },
  {
    "week": 7,
    "question": "В приведённой на лекции логической вентильной схеме АЛУ присутствуют все имена управляющих сигналов, упомянутых в «таблице полезных сочетаний управляющих сигналов», кроме одного — INC. Для реализации операции INC увеличения результата на единицу…",
    "answer": "можно использовать вход переноса АЛУ для младшего бита числа"
  },
  {
    "week": 7,
    "question": "SR-защёлку можно реализовать на основе двух вентилей NAND, соединив их со всеми входами и выходами точно также, как на основной схеме SR-защёлки, приведённой на лекции. Номер запрещённого входа для такой реализации SR-защёлки равен",
    "answer": "0"
  },
  {
    "week": 7,
    "question": "Регистры на основных шинах тракта данных в архитектуре Mic-3 позволяют\nреализовать",
    "answer": "конвейер"
  },
  {
    "week": 7,
    "question": "Если на вход мультиплексора, реализующего функцию 3-большинства подать последовательность битов 011, то какое значение будет на выходе?",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Мультиплексор представляет из себя среднюю интегральную схему, которая позволяет решать задачу",
    "answer": "сериализации входного параллельного сигнала. Под сериализацией понимают процесс перевода структуры данных в последовательность битов"
  },
  {
    "week": 5,
    "question": "Каково максимальное значение восьмиразрядного числа, хранящегося в системе со смещением на 127?\n\nУказание: ответ дать в десятичной форме.",
    "answer": "128"
  },
  {
    "week": 5,
    "question": "Запишите число 17,25 в формате с фиксированной точкой, если известно что под целую часть отведено 5 двоичных разрядов, а под дробную часть выделено 3 разряда. В ответе должна быть последовательность из 0 и 1, всего 8 двоичных цифр без каких либо разделителей.",
    "answer": "10001010"
  },
  {
    "week": 5,
    "question": "Пусть разрядность условного компьютера составляет 8 битов. Число -4 (из десятичной системы счисления) преобразовали в двоичную систему счисления в соответствии с тремя разными способами представления чисел. Укажите, какому из способов соответствуют полученные представления.",
    "answer": "01111011 - 8-разрядная система со смещением 127\n11111100 - дополнительный код\n10000100 - знаковый бит"
  },
  {
    "week": 5,
    "question": "Как называется требование отличия от нуля старшего значащего разряда мантиссы в представлении числа с плавающей точкой?",
    "answer": "нормализованная мантисса"
  },
  {
    "week": 5,
    "question": "По числу, представленному в дополнительном коде, можно получить его противоположное, выполнив последовательно две операции над битовым представлением, not и inc — это справедливо для всех чисел, кроме\n(В качестве примера взяты четырёхзрядные числа.)",
    "answer": "1000"
  },
  {
    "week": 5,
    "question": "Команда CWD (Convert Word to Double-word) ассемблера 8088 и x86 выполняет\nзнаковое расширение регистра AX до пары регистров DX:AX. Пусть перед её\nвыполнением в регистр AX помещено число –5. Что будет выведено на консоль,\nесли распечатать содержимое DX после выполнения CWD?\nЗамечание: вывод предполагается выполнять с использованием десятичной\nсистемы счисления для целых чисел со знаком",
    "answer": "-1"
  },
  {
    "week": 5,
    "question": "Бинарный код инструкции уровня ISA, передаваемый из оперативной памяти на процессор, в большинстве случаев содержит…",
    "answer": "операнды или их местонахождение\nтип операции"
  },
  {
    "week": 5,
    "question": "Расположение микрокоманд в памяти отличается от расположения инструкций процессора в скомпилированной программе тем, что первые",
    "answer": "расположены в фиксированной последовательности, а порядок исполнения определяется содержимым микрокоманды и динамическими условиями"
  },
  {
    "week": 5,
    "question": "Пусть разрядность условного компьютера составляет 6 битов. Число -5 (из десятичной системы счисления) преобразовали в двоичную систему счисления в соответствии с тремя разными способами представления чисел. Укажите, какому из способов соответствуют полученные представления.",
    "answer": "111011 - дополнительный код\n011010 - 6-разрядная система со смещением 31\n100101 - знаковый бит"
  },
  {
    "week": 5,
    "question": "Запишите число –5 в дополнительном коде, используя пять двоичных разрядов.",
    "answer": "11011"
  },
  {
    "week": 7,
    "question": "Радиолюбитель П. в свободное от основной работы время проектирует\nинтегральные схемы. Однажды ему понадобилось использовать булеву\nоперацию OR с двумя операндами. Однако к тому времени уже\nзакончились все вентили и стандартные малые интегральные схемы,\nкоторые закупил П. во время последнего шоппинга на радиорынке у\nЛендворца, кроме одной, а именно 1-мультиплексора. Немного подумав,\nнаш радиолюбитель понял, что для вычисления нужной функции от\nсигналов A и B следует подать A на единственную линию управления 1-\nмультиплексора, B — на одну из входных линий. Что нужно подать на\nоставшуюся входную линию, с точки зрения П.?\nЗамечание: П. использует в своих схемах только позитивную логику.",
    "answer": "постоянное напряжение (Vcc)"
  },
  {
    "week": 7,
    "question": "Кодер — это простейшая интегральная схема, обратная декодеру (по\nаналогии с мультиплексором/демультиплексором), по одной\nсигнализированной линии она выдаёт номер этой линии. Если\nконфигурация входных линий 2-кодера выглядит так: D0=0, D1=1, D2=0,1,00\nD3=0, то как выглядит конфигурация на выходных линиях F0, F1?\nУказание: ответ даётся двоичным числом, записанным, начиная со\nстарших разрядов (F1F0).",
    "answer": "01"
  },
  {
    "week": 7,
    "question": "Простейшее одноразрядное АЛУ представляет из себя среднюю\nинтегральную схему, реализующую три логических и одну\nарифметическую операцию. Чтобы указать, какую именно операцию\nнужно выполнить в данный момент, АЛУ имеет две входные линии,\nпринимающие номер нужной команды. Вспомогательная схема в\nсоставе АЛУ преобразует этот номер в сигнал на одной из четырёх\nлиний, открывающий путь результату соответствующей операции на\nвыходную линию АЛУ. Как называется эта вспомогательная схема?",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Название интегральной схемы, которая по n входам позволяет\nсигнализировать один из 2n выходов. Входные сигналы представляют\nномер сигнализируемого выхода.",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Если на вход мультиплексора, реализующего функцию 3-большинства\nподать последовательность битов 011, то какое значение будет на\nвыходе?",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "Класс микросхем энергонезависимой памяти с однократной записью,\nкоторые можно запрограммировать вне завода производителя,\nназывается…\nУказание: ответ — аббревиатура на английском.",
    "answer": "PROM"
  },
  {
    "week": 7,
    "question": "Укажите все варианты входных значений S, R и Q, при которых происходит переключение SR-защелки в другое состояние.",
    "answer": "S=1, R=0, Q = 0; S=0, R=1, Q = 1"
  },
  {
    "week": 7,
    "question": "Как видно из примера с конвейерной реализацией инструкции SWAP, простой конвейера могут вызывать",
    "answer": "зависимости по данным"
  },
  {
    "week": 7,
    "question": "Какие из булевых функций F(A,B) реализованы на следующих схемах:\n(A[)o ,B[)o)=[)o\n(-AB[),A-B[))=)>\nAB=)>o[=)>o\n(-AB[)o,A-B[)o)=[>\n(-AB=[)o,A-B=[)o)8)>",
    "answer": "or, xor"
  },
  {
    "week": 7,
    "question": "Чтобы получить из одного тактового генератора сигнал с удлинённым фронтом, необходимо применить задержку и:",
    "answer": "вентиль OR"
  },
  {
    "week": 7,
    "question": "Поставьте в соответствие следующим вентилям.",
    "answer": "AB =)>o X nor\nA |>o X not\nAB ))> X xor\nAB )> X or"
  },
  {
    "week": 7,
    "question": "Вычитание и переход к противоположному элементу на АЛУ для Mic-1 реализовано с учётом того факта, что целые числа представлены следующим образом.",
    "answer": "в дополнительном коде"
  },
  {
    "week": 7,
    "question": "Юный радиолюбитель Грегори проектировал новую интегральную схему, когда ему встретилась знакомая подзадача: по\nn-разрядному двоичному числу требовалось сигнализировать линию выхода, номер которой равен этому числу.\nГрегори хлопнул себя по лбу и побежал на радиорынок. Какую стандартную схему попросит Грегори на радиорынке?",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Рассмотрите схему триггера (Рис. 3.23 в книге Таненбаума). Верно ли, что время задержки определяется параметрами инвертора?",
    "answer": "Верно"
  },
  {
    "week": 7,
    "question": "Перенумеруем возможные входы SR-защёлки (значения пары контактов S и R) от 0 до 3, подразумевая двоичную запись\nномеров как определяющую значения входов. Тогда номер запрещённого входа SR-защёлки равен",
    "answer": "3"
  },
  {
    "week": 7,
    "question": "На входных линиях 3-мультиплексора имеется следующий сигнал (нумерация контактов слева—направо): 01001110, на управляющих линиях (младшие биты слева): 1 Каково значение выходного сигнала?",
    "answer": "1"
  },
  {
    "week": 7,
    "question": "SR-защёлку можно реализовать на основе двух вентилей NAND, соединив их со всеми входами и выходами точно также, как на основной схеме SR-защёлки, приведённой на лекции. Номер запрещённого входа для такой реализации SR- защёлки равен",
    "answer": "0"
  },
  {
    "week": 7,
    "question": "Название интегральной схемы, которая по n входам позволяет сигнализировать один из 2 выходов. Входные сигналы представляют номер сигнализируемого выхода.",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Название схемы, которая используется для обработки адреса, поступившего на схему памяти, с целью сигнализации нужной части этой схемы.",
    "answer": "декодер"
  },
  {
    "week": 7,
    "question": "Кодер — это простейшая интегральная схема, обратная декодеру (по аналогии с мультиплексором/демультиплексором), по одной сигнализированной линии она выдаёт номер этой линии. Если конфигурация входных линий 2-кодера выглядит так: D0=0, D1=1, D2=0, D3=0, то как выглядит конфигурация на выходных линиях F0, F1? Указание: ответ даётся двоичным числом, записанным, начиная со старших разрядов (F1F0).",
    "answer": "01"
  },
  {
    "week": 7,
    "question": "Для микропрограммной реализации умножения в архитектуре Mic-1 следует многократно провести операнды через",
    "answer": "тракт данных"
  },
  {
    "week": 9,
    "question": "Если UNIX-подобной операционной системой пользуется только один человек,\nодин пользователь с логином stud, можно ли сказать, что все процессы будут в\nPCB иметь в поле \"Идентификатор пользователя\" только stud?",
    "answer": "Неверно"
  },
  {
    "week": 9,
    "question": "Укажите единственный системный вызов для создания нового процесса, доступный в UNIX-подобных операционных системах.",
    "answer": "fork"
  },
  {
    "week": 9,
    "question": "Отметьте, что из указанного ниже, входит в управляющий блок процесса в Unix-\nподобных ОС",
    "answer": "Адрес сегмента кода процесса\nb. Идентификатор родительского процесса\nc. Идентификатор процесса\nd. Текущее состояние регистров"
  },
  {
    "week": 9,
    "question": "Пусть процесс A, в данный момент выполняемый процессором, дошел до системного вызова open. В какое состояние перейдёт данный процесс?",
    "answer": "заблокирован"
  },
  {
    "week": 9,
    "question": "Расставьте в правильном порядке этапы, выполняемые операционной системой при создании процесса.",
    "answer": "Формирование PID\nДобавление новой записи в таблицу процессов\nВыделение памяти под процесс\nФормирование управляющего блока процесса"
  },
  {
    "week": 1,
    "question": "Понятие миникомпьютера связано с вычислительными машинами, которые",
    "answer": "Всё вышеперечисленное"
  },
  {
    "week": 1,
    "question": "Что означает аббревиатура ISA в контексте многоуровневой организации\nкомпьютера?",
    "answer": "Instruction Set Architecture"
  },
  {
    "week": 1,
    "question": "Первым электронным ламповым компьютером считается",
    "answer": "ENIAC"
  },
  {
    "week": 1,
    "question": "Понятие системы разделения времени относится к:",
    "answer": "операционным системам, предоставлявшим доступ одновременно нескольким пользователям посредством терминалов"
  },
  {
    "week": 1,
    "question": "К какому из уровней многоуровневой архитектуры компьютера относится описание логических вентилей и схем. Укажите только цифру - номер уровня.",
    "answer": "0"
  },
  {
    "week": 1,
    "question": "Аббревиатура ISA в контексте современных многоуровневых машин означает",
    "answer": "Instruction Set Architecture"
  },
  {
    "week": 1,
    "question": "Что из перечисленного не хранится в чипе российского загранпаспорта с биометрическими данными?",
    "answer": "Отпечатки пальцев владельца"
  },
  {
    "week": 1,
    "question": "Идеи, составляющие понятие архитектуры Фон Неймана, были разработаны",
    "answer": "Группой учёных, работавших над созданием ENIAC"
  },
  {
    "week": 1,
    "question": "Фамилия первого программиста (использовавшего в качестве целевой машины для своих программ Аналитическую машину Чарльза Бэббиджа).",
    "answer": "Ловлейс"
  },
  {
    "week": 1,
    "question": "Фамилия автора проекта «аналитической машины» (весьма близкого прообраза современных компьютеров):",
    "answer": "Бэббидж"
  },
  {
    "week": 1,
    "question": "Рассмотрим следующий фрагмент кода на языке ассемблера.\nMOV CX, 10\nlp:\nADD BX, CX\nLOOP lp\nMOV AX, 42\nЗначение регистра CX непосредственно перед выполнением последней\nинструкции этого фрагмента равно:",
    "answer": "0"
  },
  {
    "week": 1,
    "question": "Фамилия руководителя группы разработчиков первой в СССР малой электронной\nсчетной машины (МЭСМ).",
    "answer": "Лебедев"
  },
  {
    "week": 2,
    "question": "Единицы измерения производительности суперкомпьютеров в рейтинге Top500.",
    "answer": "операции с плавающей точкой в секунду (FLOPS)"
  },
  {
    "week": 2,
    "question": "Какой и зэлементов параллельных вычислительных систем современных компьютеров подходит под принцип MIMD?",
    "answer": "многопроцессорный сервер (4-8 процессоров)"
  },
  {
    "week": 2,
    "question": "Какой из элементов параллельных вычислительных систем современных компьютеров подходит под принцип MIMD?",
    "answer": "многопроцессорный сервер (4-8 процессоров)"
  },
  {
    "week": 2,
    "question": "Чтобы конкурировать с недавно изобретенным печатным станком, один средневековый монастырь решил наладить массовое производство рукописных книг. Для этого в большом зале собралось огромное количество писцов. Настоятель монастыря называл первое слово книги, и все писцы записывали его. Затем настоятель называл второе слово, и все писцы записывали его. Этот процесс повторялся до тех пор, пока не была прочитана вслух и переписана вся книга. На какую из систем параллельной обработки информации эта система похожа больше всего? Ответ можно найти в разделе \"Параллелизм на уровне процессоров\" книги Татненбаума",
    "answer": "мультипроцессор"
  },
  {
    "week": 2,
    "question": "К какому типу по классификации Флинна следует отнести архитектуру вычислительной системы, если несколько её процессоров функционируют асинхронно и независимо.",
    "answer": "MIMD"
  },
  {
    "week": 2,
    "question": "Основным конструктивным элементом, обеспечившим переход от первого поколения(ламповых) электронных вычислительных машин ко второму, стал... Ответ: существительное в единственном числе.",
    "answer": "транзистор"
  },
  {
    "week": 2,
    "question": "Ультрабуки обычно реализуют отличную от настольных компьютеров архитектуру.",
    "answer": "Неверно"
  },
  {
    "week": 2,
    "question": "Внутреннее устройство процессора, а именно эффективный способ соединения базовых интегральных схем для организация цикла выборка — декодирование —исполнение (fetch/decode/execute) относится к уровню",
    "answer": "Микроархитектуры"
  },
  {
    "week": 2,
    "question": "К какому разделу таксономии Флинна относятся матричные процессоры (в том числе,процессоры на современных видеокартах)?\nУказание: запишите аббревиатуру.",
    "answer": "SIMD"
  },
  {
    "week": 3,
    "question": "В случае прямого отоображения для ячеек памяти на кэш-линейки адрес обратной записи линейки в оперативную память определяется по",
    "answer": "тегу и номеру кэш записи"
  },
  {
    "week": 3,
    "question": "В начале 80-х в американских университетах получил развитие подход к проектированию архитектуры набора команд, рассчитанный на максимальную скорость запуска на выполнение очередной команды, в виду чего эти команды планировалось делать максимально простыми. Укажите название такого подхода.",
    "answer": "RISC"
  },
  {
    "week": 3,
    "question": "Количество двоичных разрядов, которыми кодировался один десятичный разряд в двоично-десятичном коде, равно",
    "answer": "4"
  },
  {
    "week": 3,
    "question": "Сколько битов следует использовать для записи одной шестнадцатеричной цифры?",
    "answer": "4"
  },
  {
    "week": 3,
    "question": "С точки зрения таксономии Флинна конвейер и суперскаляр относятся к архитектуре",
    "answer": "SISD"
  },
  {
    "week": 3,
    "question": "Часто говорят, что первые электронные компьютеры имели всего два уровня архитектуры. Первый это уровень цифровой логики (реализованный простейшими переключательными элементами: лампами или транзисторами), а второй:",
    "answer": "уровень набора инструкций"
  },
  {
    "week": 3,
    "question": "Отличие L1-кэша от следующих уровней кэша в последних процессорах Intel состоит в",
    "answer": "разделении памяти на две равные области: кэш для данных и кэш для инструкций"
  },
  {
    "week": 3,
    "question": "Память некоторого компьютера разбита на ячейки по 5 бит. Архитектура компьютера такова, что адрес в памяти должен занимать ровно две ячейки памяти. Сколько планок памяти следует поставить в такой компьютер, если одна стандартная планка памяти для него имеет объём 1024 бит, адресное пространство компьютера должно использоваться целиком, а количество неиспользуемых бит на имеющихся планках следует минимизировать?",
    "answer": "5"
  },
  {
    "week": 8,
    "question": "Укажите общепринятое название процессов, работающих в фоновом режиме, в UNIX-подобных операционных системах.",
    "answer": "демон"
  },
  {
    "week": 8,
    "question": "Если UNIX-подобной операционной системой пользуется только один человек, один пользователь с логином stud, можно ли сказать, что все процессы будут в PCB иметь в поле \"Идентификатор пользователя\" только stud?",
    "answer": "неверно"
  },
  {
    "week": 8,
    "question": "В чем заключаются две основные функции операционной системы персональных компьютеров?",
    "answer": "1. Организация интерфейса с пользователем\n2. Управление ресурсами выч. системы"
  },
  {
    "week": 8,
    "question": "Укажите единственный системный вызов для создания нового процесса, доступный в UNIX-подобных операционных системах.",
    "answer": "fork"
  },
  {
    "week": 8,
    "question": "Расставьте в правильном порядке этапы, выполняемые операционной системой при создании процесса.",
    "answer": "1. Фомирование PID\n2. Добавление новой записи в таблицу процессов\n3. Выделение памяти под процесс\n4. Формирование управляющего блока процесса"
  },
  {
    "week": 8,
    "question": "Сопоставьте разные по структуре реализации операционных систем с их свойствами",
    "answer": "1 - монолитные системы\n2 - многоуровневые системы\n3 - микроядро"
  },
  {
    "week": 8,
    "question": "Для реализации многозадачности в вычислительной системе необходимо наличие нескольких процессоров.",
    "answer": "неверно"
  },
  {
    "week": 8,
    "question": "Какие переходы процесса из одного состояния в другое отражаются в PCB?",
    "answer": "Все варианты"
  },
  {
    "week": 10,
    "question": "Компьютеры, операционные системы которых рассчитаны на монопольный запуск единственного процесса, командой TSL.",
    "answer": "не располагают"
  },
  {
    "week": 10,
    "question": "Известно что программы планирования процессов в различных операционных системах различны, но существуют наиболее используемые критерии планирования. Эти критерии, в частности, зависят от среды планирования.\nУкажите какие критерии планирования соответствуют перечисленным средам.",
    "answer": "поддержка постоянной...→ пакетные системы,\nпредоставление...→ все системы,\nсоблюдение разумного...→ все системы,\nсоблюдение предельных...→ системы реального времени,\nминимизация...→ пакетные системы,\nбыстрый...→ интерактивные системы"
  },
  {
    "week": 10,
    "question": "Представьте себе мультипрограммную систему со степенью 6 (то есть имеющую в памяти одновременно шесть программ). Предположим, что каждый процесс проводит 40 % своего времени в ожидании ввода-вывода. Каким будет процент использования времени центрального процессора?\nУказание: При вводе ответа используйте только цифры (округлите до целого). Знак \"%\" вводить не следует.",
    "answer": "100"
  },
  {
    "week": 10,
    "question": "Предположим, что в процессе P при помощи вызовов функции pthread_create() созданы 3 потока, выполняющих одинаковые действия. Среди операторов потоков нет ни блокировок, ни синхронизаций, ни каких-либо других действий, способных принудительно \"останавливать\" поток. В основном процессе нет никаких средств управления потоками, кроме упомянутых выше вызовов pthread_create() (см. похожий процесс в материалах лекции 15). Назовем потоки \"условно\" A, B, C по порядку создания в процессе. Отметьте все верные высказывания.",
    "answer": "действия всех потоков прекратят выполняться как только завершится процесс, их создавший\nосновной процесс P завершится тогда и только тогда, когда все созданные им потоки полностью выполнят все операторы"
  },
  {
    "week": 10,
    "question": "В зависимости от соотношения в процессе операций ввода-вывода и вычислений процессы делятся на 2 типа.",
    "answer": "Процессы, которые основную часть... → процессами, ограниченными скоростью работы устройств ввода-вывода,\nПроцессы, которые бОльшую часть своего времени обходятся без ожидания данных называются → процессами, ограниченными скоростью вычислений "
  },
  {
    "week": 10,
    "question": "Алгоритм планирования процессов, при котором учитывается UID, называется",
    "answer": "справедливым планированием"
  },
  {
    "week": 10,
    "question": "Пусть вычислительная система обрабатывает задания в пакетном режиме. В настоящий момент в системе присутствуют 5 заданий, время выполнения каждого задания известно. Задание A выполняется за 5 с, B за 3, C за 2, D за 1, E за 4 с. Посчитайте минимальное из возможных среднее оборотное время (в секундах).\nУказание: следует ввести только цифры в десятичной системе счисления.",
    "answer": "7"
  },
  {
    "week": 11,
    "question": "Если при одинаковых входных данных получаются разные результаты, то можно сказать, имеет место",
    "answer": "недетерминированность или недетерминизм"
  },
  {
    "week": 11,
    "question": "В выражениях с шаблонами поиска часто применяются специальные символы, называемые метасимволами. Укажите каким метасимволам соответствуют приведенные описания",
    "answer": "используются для указания множества символов, которые могут находиться в имени файла → [...],\nприменяется для того, чтобы указать, что в этом месте имени файла может находиться любое неотрицательное число любых символов → *,\nуказывает, что на его месте в имени файла может находиться один любой символ → ?"
  },
  {
    "week": 11,
    "question": "Для того, чтобы добиться детерминированности алгоритма надо все ресурсы, относительно которых алгоритм может находиться в состоянии гонки (race condition), заключить в критические секции и организовать синхронизацию. ",
    "answer": "Верно"
  },
  {
    "week": 11,
    "question": "Неделимая операция, выполняемая либо полностью либо не выполняемая совсем называется... (ожидается ответ на русском языке с соблюдением правил склонения)",
    "answer": "атомарной"
  },
  {
    "week": 11,
    "question": "Команда ps - основной инструмент для текущего контроля процессов. В частности, список всех процессов, запущенных в системе, можно получить, при помощи команды с аргументами\nps aux.\nСопоставьте название полей, выдаваемых указанной командой, с их описанием.\nЗамечание. Имена полей могут незначительно отличаться в разных версиях UNIX. Приведенные в вопросе имена полей соответствуют OS Lubuntu 13.04, дистрибутив которой приведен в на странице курса в Moodle.",
    "answer": "USER → имя владельца процесса, \nVSZ → виртуальный размер процесса в килобайтах, \nSTAT → текущий статус процесса, \nPID → идентификатор процесса, \nTIME → время центрального процессора, затребованное процессом, \nRSS → размер резидентного набора (количество страниц памяти размером 1Кб), \n%CPU → доля времени центрального процессора, выделенная данному процессу"
  },
  {
    "week": 11,
    "question": "Потоки, порожденные процессом при помощи вызова функции pthread_create() имеют  доступ к статическим данным процесса. ",
    "answer": "одинаковый для всех потоков"
  },
  {
    "week": 11,
    "question": "Сигналы в Unix-подобных ОС это запросы на прерывание на уровне процессов. При помощи какой команды пользователь из командной оболочки может послать какой-либо сигнал одному из запущенных им процессов, если известен идентификатор этого процесса (pid)?\nУказание - надо ввести только команду (без параметров, ключей, опций и т.д.)",
    "answer": "kill"
  },
  {
    "week": 11,
    "question": "В Unix-подобных ОС поддерживается несколько типов файлов. Сопоставьте типы файлов и команды, с помощью которых можно создать файл указанного типа. ",
    "answer": "Именованный канал → mknod, \nОбычный текстовый файл → любой текстовый редактор, \nКаталог → mkdir"
  },
  {
    "week": 11,
    "question": "Если точка является первым символом в имени файла в Unix-подобных ОС, то это означает специальное назначение файла. Какое? ",
    "answer": "Это конфигурационные файлы, они содержат различные настройки"
  },
  {
    "week": 11,
    "question": "Критической секцией называется фрагмент программы, в котором выполняется функция чтения или записи общих данных. Относительно критической секции должен выполняться режим взаимного исключения. ",
    "answer": "Верно"
  },
  {
    "week": 11,
    "question": "Пусть процесс \"породил\" два потока P и P . Известно, что эти потоки удовлетворяют условию Бернстайна. При программировании потоков обязательно следует использовать механизмы синхронизации. ",
    "answer": "Неверно"
  },
  {
    "week": 11,
    "question": "Помимо имени и содержимого каждый файл и каталог в Unix-подобной ОС имеет ряд атрибутов, предназначенных для описания его свойств. Отметьте, что именно относится к этим атрибутам.",
    "answer": "дата и время создания файла,\nправа доступа к файлу или каталогу,\nпользователь и группа пользователей,\nзакодированный тип файла,\nдата и время последней модификации файла"
  },
  {
    "week": 11,
    "question": "Кто первым предложил программное решение проблемы взаимного исключения, не требующее четкой очередности?",
    "answer": "Теодор Деккер"
  },
  {
    "week": 11,
    "question": "Для обеспечения взаимного исключения могут использоваться . Они представляют данные и операции для работы с этими данными в виде специального модуля или пакета процедур.",
    "answer": "мониторы"
  },
  {
    "week": 10,
    "question": "Пусть процесс \"породил\" два потока P1 и P2. Известно, что эти потоки удовлетворяют условию Бернстайна. При программировании потоков обязательно следует использовать механизмы синхронизации.",
    "answer": "Неверно"
  },
  {
    "week": 11,
    "question": "Отметьте все стратегии управления памятью, которые относятся к кусочно-непрерывному отображению логического адресного пространства в физическое.",
    "answer": "сегментно-страничная организация памяти\nсегментная организация памяти\nстраничная организация памяти"
  },
  {
    "week": 11,
    "question": "Сборка мусора позволяет периодически освобождает память, удаляя объекты, которые уже не будут востребованы приложениями. Она применяется в простых схемах управления памятью с [?] разделами.",
    "answer": "динамическими"
  },
  {
    "week": 11,
    "question": "Сегментная организация памяти не может гарантировать 100% использование физической памяти. Это связано с ...",
    "answer": "внешней фрагментацией"
  },
  {
    "week": 11,
    "question": "Укажите, какие поля структуры таблицы сегментов задействованы при реализации защиты памяти",
    "answer": "размер сегмента\nатрибуты управления доступом"
  },
  {
    "week": 11,
    "question": "Укажите, какие поля структуры таблицы страниц задействованы при реализации защиты памяти при страничной организации памяти",
    "answer": "атрибуты управления доступом"
  },
  {
    "week": 11,
    "question": "Простые схемы управления памятью с динамическими разделами не могут гарантировать 100% использование физической памяти. Это чаще всего связано с ...",
    "answer": "внешней фрагментацией"
  },
  {
    "week": 11,
    "question": "В операционных системах, где помимо ОС, в памяти может находиться только один процесс пользователя, не нужен блок управления памятью.",
    "answer": "Неверно"
  },
  {
    "week": 11,
    "question": "Существует несколько стратегий для размещения очередного задания в памяти при условии, что физическое адресное пространство допускает динамические разделы. Укажите для каждого из фрагментов приведенных алгоритмов название стратегии, к которой они относятся.\n1) Просматривается вся таблица свободных фрагментов памяти, в ней ищется запись с максимальным размером фрагмента. Это стратегия [?].\n2) Просматривается вся таблица свободных фрагментов памяти, в ней ищется запись, такая, что разница между размером фрагмента и размером загрузочного файла задания минимальна. Это стратегия [?].\n3) Просматривается таблица свободных фрагментов памяти, в ней ищется первая запись, такая, что разница между размером фрагмента и размером загрузочного файла положительна. Это стратегия [?].",
    "answer": "1) worst‑fit\n2) best‑fit\n3) first‑fit"
  },
  {
    "week": 12,
    "question": "В простых схемах управления памятью с фиксированными разделами, адреса размещения разделов в физической памяти фиксированы.",
    "answer": "Верно"
  },
  {
    "week": 12,
    "question": "В простых схемах управления памятью с фиксированными разделами, размер всех разделов должен быть одинаковым.",
    "answer": "Неверно"
  },
  {
    "week": 11,
    "question": "Для реализации сегментно-страничной организации памяти логический адрес должен быть",
    "answer": "двумерным"
  },
  {
    "week": 11,
    "question": "Отметьте все стратегии управления памятью, которые относятся к линейному непрерывному отображению логического адресного пространства в физическое.",
    "answer": "организация памяти с фиксированными разделами\nорганизация памяти с динамическими разделами без оверлеев"
  },
  {
    "week": 11,
    "question": "В простых схемах управления памятью с фиксированными разделами, адреса размещения разделов в физической памяти фиксированы.",
    "answer": "Верно"
  },
  {
    "week": 11,
    "question": "В простых схемах управления памятью с фиксированными разделами, размер всех разделов должен быть одинаковым.",
    "answer": "Неверно"
  },
  {
    "week": 12,
    "question": "Отметьте операционные системы с простым управлением памятью, когда помимо самой ОС в памяти располагался только один пользовательский процесс.",
    "answer": "Apple DOS, \nMS DOS"
  },
  {
    "week": 12,
    "question": "Пусть физическая память вычислительной системы (ВС), доступная процессу пользователя, имеет размер 1024 Кб, а загрузочный файл задания имеет размер 1846 Кб. Операционная система этого компьютера имеет блок управления памятью с фиксированными разделами. Укажите наиболее приемлемый вариант запуска описанного задания.",
    "answer": "Надо перекомпилировать программу, указав возможность загрузки оверлеев."
  },
  {
    "week": 12,
    "question": "Отметьте операционные системы с простым управлением памятью, когда помимо самой ОС в памяти располагался только один пользовательский процесс.",
    "answer": "Apple DOS, \nMS DOS"
  },
  {
    "week": 12,
    "question": "Пусть физическая память вычислительной системы (ВС), доступная процессу пользователя, имеет размер 1024 Кб, а загрузочный файл задания имеет размер 1846 Кб. Операционная система этого компьютера имеет блок управления памятью с фиксированными разделами. Укажите наиболее приемлемый вариант запуска описанного задания.",
    "answer": "Надо перекомпилировать программу, указав возможность загрузки оверлеев."
  },
  {
    "week": 12,
    "question": "Укажите, какие поля таблиц сегментов и страниц задействованы при реализации защиты памяти при сегментно-страничной организации памяти",
    "answer": "размер сегмента, \nатрибуты управления доступом к сегменту\n"
  },
  {
    "week": 12,
    "question": "Страничная организация памяти не может гарантировать 100% использование физической памяти. Это связано с ...",
    "answer": "внутренней фрагментацией"
  },
  {
    "week": 12,
    "question": "Простые схемы управления памятью с фиксированными разделами не могут гарантировать 100% использование физической памяти. Это связано с ...",
    "answer": "внутренней фрагментацией"
  },
  {
    "week": 12,
    "question": "Отметьте операционные системы с простым управлением памятью, когда помимо самой ОС в памяти располагался только один пользовательский процесс.",
    "answer": "Apple DOS; MS DOS"
  },
  {
    "week": 12,
    "question": "Пусть физическая память вычислительной системы (ВС), доступная процессу пользователя, имеет размер 1024 Кб, а загрузочный файл задания имеет размер 1846 Кб. Операционная система этого компьютера имеет блок управления памятью с фиксированными разделами. Укажите наиболее приемлемый вариант запуска описанного задания.",
    "answer": "Надо перекомпилировать программу, указав возможность загрузки оверлеев."
  },
  {
    "week": 12,
    "question": "При распределении памяти динамическими разделами используется процедура периодического освобождения памяти. В этой процедуре происходит удаление объектов, которые не востребованы приложениями и \"перенос\" находящихся в памяти процессов так, чтобы максимизировать размер свободного фрагмента. Для вычисления физического адреса объекта в такой модели следует использовать",
    "answer": "двумерную адресацию, состоящую из начального начального адреса размещения процесса и смещения в нём"
  },
  {
    "week": 13,
    "question": "Большинство программ неравномерно обращается к своему адресному пространству. Эти обращения склонны группироваться на небольшом количестве страниц. Такой набор страниц зависит от временнОго интервала. Этот набор называется",
    "answer": "рабочее множество страниц"
  },
  {
    "week": 12,
    "question": "Алгоритм LRU для последовательности обращений, приведенной на слайде 19 лекции 19, порождает 8 исключительных ситуаций page fault. Посчитайте, какое минимальное колво исключительных ситуаций page fault можно получить, действуя в рамках этого алгоритма в условиях, когда указанному процессу выделено 5 кадров? Указание - в качестве ответа на вопрос следует ввести число в десятичной системе счисления.",
    "answer": "5"
  },
  {
    "week": 12,
    "question": "Большинство программ неравномерно обращается к своему адресному пространству. Эти обращения склонны группироваться на небольшом количестве страниц. Такой набор страниц зависит от временнОго интервала. Этот набор называется",
    "answer": "рабочее множество страниц"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики: 7,02 - среднее время доступа к оперативной памяти (в наносекундах), 2,15 - среднее время доступа к TLB (в наносекундах), 0,48 - вероятность наличия информации в TLB. используется трёхуровневая организация таблицы страниц. Посчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "20,12"
  },
  {
    "week": 12,
    "question": "Операционная система выполняет действия, связанные с подкачкой страниц, при возникновении различных ситуаций. Отметьте те ситуации, при которых происходит подкачка.",
    "answer": "при создании процесса, при возникновении исключительной ситуации отсутствия страницы, при завершении процесса, во время выполнения процесса, к примеру, при переходе его в состояние \"заблокирован\""
  },
  {
    "week": 12,
    "question": "Алгоритм NFU для последовательности обращений, приведенной на слайде 20 лекции 19, может порождать различное количество исключительных ситуаций page fault. Такое случается, когда несколько страниц имеют счетчик количества обращений, совпадающий с минимальным. Посчитайте, какое минимальное кол-во исключительных ситуаций page fault можно получить, действуя в рамках этого алгоритма. Указание - в качестве ответа на вопрос следует ввести число в десятичной системе счисления.",
    "answer": "6"
  },
  {
    "week": 12,
    "question": "Модель, при которой распределение памяти производится блоками постоянной длины, называется",
    "answer": "[страничной]"
  },
  {
    "week": 12,
    "question": "Необходимо настроить алгоритм замещения страниц, так чтобы число исключительных ситуаций по отсутствию страницы в памяти находилось в определенном интервале [Pl, Ph]. Допускается вытеснение страниц любого из процессов. Выберите возможные варианты, если в настоящий момент времени частота возникновения исключительных ситуаций Pt",
    "answer": "Если Pl < Pt < Ph → следует закончить настройку алгоритма,\nЕсли Pt > Ph → следует увеличить число кадров, отводимых процессам,\nЕсли Pt < Pl → следует уменьшить число кадров, отводимых процессам"
  },
  {
    "week": 12,
    "question": "При организации страничной виртуальной памяти в таблицу страниц были внесены дополнительные биты, характеризующие каждую страницу. Отметьте, для чего используются эти биты.",
    "answer": "Для защиты страниц от несанкционированного обращения служат → биты управления доступом,\nДля того, чтобы сэкономить на операциях записи при вытеснении страниц из памяти на диск анализируются → биты модификации"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики: 4,66 - среднее время доступа к оперативной памяти (в наносекундах), 3,76 - среднее время доступа к TLB (в наносекундах), 0,56 - вероятность наличия информации в TLB. Используется двухуровневая организация таблицы страниц. Посчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "12,52"
  },
  {
    "week": 12,
    "question": "Пусть блок MMU вычислительной системы настроен на реализацию страничной виртуальной памяти. Пусть цепочка обращений к страницам соответствует указанной ниже последовательности (указаны номера страниц). 012301401234 Указанному процессу выделено 4 кадра. Выберите алгоритм замещения так, чтобы минимизировать число исключительных ситуаций page fault.",
    "answer": "NFU"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики: 9,09 - среднее время доступа к оперативной памяти (в наносекундах), 8,16 - среднее время доступа к TLB (в наносекундах), 0,00 - вероятность наличия информации в TLB. используется трёхуровневая организация таблицы страниц. Посчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "44,52"
  },
  {
    "week": 12,
    "question": "Для чего используется алгоритм WSClock?",
    "answer": "Для поиска страниц - кандидатов на вытеснение"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики: 2,82 - среднее время доступа к оперативной памяти (в наносекундах), 5,38 - среднее время доступа к TLB (в наносекундах), 0,44 - вероятность наличия информации в TLB. Используется двухуровневая организация таблицы страниц. Посчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "11,36"
  },
  {
    "week": 12,
    "question": "Необходимо настроить алгоритм замещения страниц, так чтобы число исключительных ситуаций по отсутствию страницы в памяти находилось в определенном интервале [Pl, Ph]. Допускается вытеснение страниц любого из процессов. Выберите возможные варианты, если в настоящий момент времени частота возникновения исключительных ситуаций Pt.",
    "answer": "Если Pl < Pt < Ph → следует закончить настройку алгоритма, Если Pt < Pl → следует уменьшить число кадров, отводимых процессам, Если Pt > Ph → следует увеличить число кадров, отводимых процессам"
  },
  {
    "week": 12,
    "question": "Страничная организация памяти предназначена для …",
    "answer": "получения бОльшего адресного пространства без приобретения дополнительной физической памяти"
  },
  {
    "week": 12,
    "question": "Пусть блок MMU вычислительной системы настроен на реализацию страничной виртуальной памяти. Пусть цепочка обращений к страницам соответствует указанной ниже последовательности (указаны номера страниц). 012305401534 Указанному процессу выделено 4 кадра. Выберите алгоритм замещения так, чтобы минимизировать число исключительных ситуаций page fault.",
    "answer": "OPT"
  },
  {
    "week": 12,
    "question": "Мощность рабочего множества страниц для последовательности … 1 6 2 5 5 3 3 1 2 6 7 2 7 6 6 6 6 7 1 3 3 … равна 6. Окно рабочего множества и время выбраны так, что последовательность обращений учитывается полностью.",
    "answer": "Верно"
  },
  {
    "week": 12,
    "question": "Алгоритмы замещения страниц в сегментно-страничной организации памяти делятся на ...",
    "answer": "локальные , глобальные"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики:\n\n9,73 - среднее время доступа к оперативной памяти (в наносекундах),\n\n3,06 - среднее время доступа к TLB (в наносекундах),\n\n0,21 - вероятность наличия информации в TLB.\n\nИспользуется двухуровневая организация таблицы страниц.\n\nПосчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "28,1634"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики: 9,18 - среднее время доступа к оперативной памяти (в наносекундах), 5,53 - среднее время доступа к TLB (в наносекундах), 0,21 - вероятность наличия информации в TLB. Используется двухуровневая организация таблицы страниц. Посчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "29,21"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики: 3,77 - среднее время доступа к оперативной памяти (в наносекундах), 3,96 - среднее время доступа к TLB (в наносекундах), 0,03 - вероятность наличия информации в TLB. Используется двухуровневая организация таблицы страниц. Посчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "15,04"
  },
  {
    "week": 13,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики:\n\n7,69 - среднее время доступа к оперативной памяти (в наносекундах),\n\n1,22 - среднее время доступа к TLB (в наносекундах),\n\n0,40 - вероятность наличия информации в TLB.\n\nИспользуется двухуровневая организация таблицы страниц.\n\nПосчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "18,14"
  },
  {
    "week": 13,
    "question": "Расставьте в правильном порядке шаги, выполняемые контроллером при организации вывода.",
    "answer": "[установить бит занятости]\n[извлечь код команды из регистра управления] [инициировать выполнение команды ]\n[сбросить бит занятости]"
  },
  {
    "week": 13,
    "question": "Определите к какому типу устройств ввода-вывода относятся следующие устройства",
    "answer": "HMDD → блочное устройство\nSSD → блочное устройство\nмодем → символьное устройство\nлазерный принтер → символьное\nустройство\nклавиатура → символьное устройство"
  },
  {
    "week": 13,
    "question": "Укажите функции, которые в обязательном порядке должны реализовывать большинство файловых систем.",
    "answer": "Возможность создавать, изменять, удалять файлы\nВозможность обращаться к файлам по символьным именам\nВозможность иметь разделяемые файлы"
  },
  {
    "week": 13,
    "question": "Влияет ли разрядность указателя (слайд 25 лекции 21) на максимальный размер файла?",
    "answer": "Да"
  },
  {
    "week": 13,
    "question": "Определите к какому типу устройств ввода-вывода относятся следующие устройства [2]",
    "answer": "модем → для ввода и вывода информации\nлазерный принтер → только для вывода информации\nHMDD → для ввода и вывода информации\nклавиатура → только для ввода информации\nSSD → для ввода и вывода информации"
  },
  {
    "week": 13,
    "question": "Расставьте в правильном порядке шаги, выполняемые процессором при организации вывода.",
    "answer": "[опросить регистр состояния]\n[записать команду в регистр управления]\n[записать данные в регистр данных]\n[установить бит готовности команды]"
  },
  {
    "week": 13,
    "question": "Функции файловой системы можно распределить на функции, относящиеся к файлу в целом и на функции, работающие с элементами файлов. Рассортируйте перечисленные функции по указанному принципу.",
    "answer": "прочитать (read) → работает с индивидуальными элементами данных в рамках файла\nкопировать (copy) → работает с файлом, как с единым целым\nоткрыть (open) → работает с файлом, как с единым целым\nзаписать (write) → работает с индивидуальными элементами данных в рамках файла\nсоздать (create) → работает с файлом, как с единым целым"
  },
  {
    "week": 13,
    "question": "В лекции 20 рассматривались 2 варианта хранения информации о свободных блоках на диске. Какое из представлений позволит просто и эффективно решить задачу о нахождении N последовательных свободных блоков на диске?",
    "answer": "Битовый массив"
  },
  {
    "week": 13,
    "question": "Многоуровневая архитектура файловой системы \"предполагает\", что ключевые алгоритмы и структуры данных для обеспечения манипуляций с файлами выполняются на разных уровнях.\nСоотнесите описание действия с названием уровня.",
    "answer": "вызов команды mkdir в терминале → логический ввод - вывод\nсистемный вызов, работающий с дескриптором файлов → базовая файловая система\ncистемный вызов (например, open) в пользовательской программе → логический ввод - вывод\nреализация разделяемых файлов → базовая файловая система\nобращение к блокам диска (секторам, цилиндрам) → драйверы"
  },
  {
    "week": 13,
    "question": "Дополните определения.",
    "answer": "Если центральный процессор занимается вводом или выводом каждого байта и пребывает в цикле ожидания, пока сможет получить или отправить следующую порцию данных, то имеет место [программный способ ввода‐вывода].\nЕсли центральный процессор инициирует передачу символа и переходит к решению каких-нибудь других задач, пока не поступит сигнал о завершении ввода-вывода, то имеет место [ввод‐вывод управляемый прерываниями].\nЕсли существует отдельная микросхема, которая полностью управляет передачей блока данных, выдавая прерывание только тогда, когда будет передан весь блок то говорят, что это [ввод‐вывод через прямой доступ к памяти]."
  },
  {
    "week": 14,
    "question": "Влияет ли разрядность указателя (слайд 25 лекции 21) на максимальный размер файла?",
    "answer": "да"
  },
  {
    "week": 14,
    "question": "Операционная система может выполнять системные вызовы в разных режимах.",
    "answer": "Если системный вызов не приводит к переводу процесса в режим ожидания, и после выполнения некоторых инициирующих действий управление возвращается процессу, то режим называется -> асинхронным\nЕсли системный вызов приводит к тому, что процесс, инициировавший вызов, приостанавливается до тех пор, пока вызов не выполнит всю требующуюся работу, то такой режим называется -> синхронным"
  },
  {
    "week": 14,
    "question": "В некоторых подсистемах ввода-вывода центральный процессор не \"откликается\" на каждое прерывание от устройства ВВ, а сам опрашивает все устройства периодически. Укажите термин, соответствующий такому опросу, на английском языке.",
    "answer": "polling"
  },
  {
    "week": 14,
    "question": "Укажите на какие классы по типу организации можно разделить компьютерные шины",
    "answer": "параллельные шины, последовательные шины"
  },
  {
    "week": 14,
    "question": "Укажите, какие функции выполняет подсистема ввода-вывода.",
    "answer": "организация разделения УВВ, буферизация , обработка ошибок , предоставление интерфейса для драйверов устройств"
  },
  {
    "week": 14,
    "question": "Для взаимодействия пользовательского процесса с подсистемой ввода-вывода операционная система обычно предоставляет несколько системных вызовов, зависящие от типа используемого устройства. Соотнесите предоставляемые системные вызовы с типом устройства.",
    "answer": "get → символьное устройство, read → блочное устройство, seek → блочное устройство, put → символьное устройство"
  },
  {
    "week": 14,
    "question": "Укажите, какие из шин (по назначению) составляют локальную магистраль",
    "answer": "шина данных, шина адреса, шина управления и состояния"
  },
  {
    "week": 14,
    "question": "Следует отличать буферизацию от кэширования. Назначение этих механизмов различное.",
    "answer": "Буферизация используется [для \"устранения\" разницы в скорости участников обмена информацией] и [для временного хранения данных]. Кэширование используется [для увеличения скорости доступа к данным]."
  },
  {
    "week": 14,
    "question": "Определите к какому типу устройств ввода-вывода относятся следующие устройства:",
    "answer": "HMDD → блочное устройство, SSD → блочное устройство, модем → символьное устройство, лазерный принтер → символьное\nустройство, клавиатура → символьное устройство"
  },
  {
    "week": 14,
    "question": "Чтобы избежать одновременного использования сетевого принтера различными процессами в подсистеме ввода-вывода существует механизм. Указание - название (в именительном падеже) следует вводить по-русски.",
    "answer": "буфер"
  },
  {
    "week": 14,
    "question": "Операционная система может допускать установку нового устройства без своей перекомпиляции.",
    "answer": "Верно"
  },
  {
    "week": 14,
    "question": "Расставьте в правильном порядке шаги, выполняемые контроллером DMA.",
    "answer": "[получает сигнал от устройства ВВ]\n[запрашивает у процессора разрешение на управление магистралью] [сообщает УВВ адрес в памяти]\n[передает данные на/из УВВ]\n[возвращает управление магистралью]"
  },
  {
    "week": 14,
    "question": "Все перечисленные в лекции 21 стратегии планирования ориентированы на достижение определенных целей. Отметьте, каких именно.",
    "answer": "максимизация пропускной способности (т. е. числа обработанных секторов в единицу времени), минимизация среднего времени ответа , минимизация дисперсии времен ответа (т.е. минимизация разницы между максимальным временем ответа и минимальным)"
  },
  {
    "week": 15,
    "question": "Допустим диск имеет 100 цилиндров (от 0 до 99). В настоящий момент сформирована очередь запросов: 2, 7, 55, 61, 45, 17, 80, 10,\nа текущий цилиндр – 50. В соответствии с указанной в параметрах подсистемы ввода- вывода стратегией очередь была обслужена в таком порядке 55, 61, 80, 2, 7, 10, 17, 45. Какая стратегия была применена? Укажите только аббревиатуру заглавными английскими буквами.",
    "answer": "C-SCAN"
  },
  {
    "week": 15,
    "question": "Атрибуты файлов (иногда их называют мета-данными) в различных файловых системах отличаются списком полей. Но существует \"обязательный\" набор, который присутствует в большинстве файловых систем, используемых в UNIX-подобных ОС. Отметьте поля, относящиеся к \"обязательному\" набору.\nК сведению.\nЧтобы определить, какая именно файловая система установлена в UNIX-подобной ОС надо использовать команду\nfile -s /dev/sda1\nЕё следует запускать с полномочиями суперпользователя.",
    "answer": "права доступа к файлу, владелец файла, время последнего обращения, тип файла"
  },
  {
    "week": 15,
    "question": "Допустим диск имеет 100 цилиндров (от 0 до 99). В настоящий момент сформирована очередь запросов: 2, 7, 55, 61, 45, 17, 80, 10,\nа текущий цилиндр – 50. В соответствии с указанной в параметрах подсистемы ввода- вывода стратегией очередь была обслужена в таком порядке 55, 61, 45, 17, 10, 7, 2, 80. Какая стратегия была применена? Укажите только аббревиатуру заглавными английскими буквами.",
    "answer": "SSTF"
  },
  {
    "week": 15,
    "question": "Какие пароли меньше подвержены подбору?",
    "answer": "сгенерированные случайным образом последовательности букв, цифр и знаков"
  },
  {
    "week": 15,
    "question": "Многоуровневая архитектура файловой системы \"предполагает\", что ключевые алгоритмы и структуры данных для обеспечения манипуляций с файлами выполняются на разных уровнях.\nСоотнесите описание действия с названием уровня.",
    "answer": "обращение к блокам диска (секторам, цилиндрам) → драйверы, системный вызов, работающий с дескриптором файлов → базовая файловая система, вызов команды mkdir в терминале → логический ввод - вывод, реализация разделяемых файлов → базовая файловая система, cистемный вызов (например, open) в пользовательской программе → логический ввод - вывод"
  },
  {
    "week": 15,
    "question": "Многоуровневая архитектура файловой системы \"предполагает\", что ключевые алгоритмы и структуры данных для обеспечения манипуляций с файлами выполняются на разных уровнях.",
    "answer": "перевод логического адреса файла в физический (номер цилиндра, поверхности, сектора) → драйверы, вызов команды chmod в терминале → логический ввод - вывод, менеджер свободного пространства → базовая файловая система, таблица открытых файлов, индексных узлов и т. д. → базовая файловая система, cистемный вызов (например, close) в прикладной программе → логический ввод - вывод"
  },
  {
    "week": 15,
    "question": "Укажите какие из стратегий планирования выполнения запросов к жесткому диску обрабатывают обращения как к нулевому цилиндру, так и к цилиндрам, находящимся в средней зоне диска, за одинаковое время, т. е. отсутствует дискриминация крайних цилиндров.",
    "answer": "FCFS, C-SCAN"
  },
  {
    "week": 15,
    "question": "Система может поддерживать разные статусы разделов, особым образом отмечая разделы, которые могут быть использованы для загрузки модулей ОС, и разделы, в которых можно устанавливать только приложения и хранить файлы данных. При высокоуровневом форматировании можно задать до 4-х разделов с разными ОС. Какая из областей разбиения диска на разделы позволяет пользователю выбрать и загрузить конкретную операционною систему?",
    "answer": "NSB"
  },
  {
    "week": 15,
    "question": "Допустим диск имеет 100 цилиндров (от 0 до 99). В настоящий момент сформирована очередь запросов: 2, 7, 55, 61, 45, 17, 80, 10,\nа текущий цилиндр – 50. В соответствии с указанной в параметрах подсистемы ввода- вывода стратегией очередь была обслужена в таком порядке 55, 61, 80, 45, 17, 10, 7, 2. Какая стратегия была применена? Укажите только аббревиатуру заглавными английскими буквами.",
    "answer": "SCAN"
  },
  {
    "week": 15,
    "question": "Стратегия C-SCAN так же как и стратегия SCAN демонстрирует дискриминацию крайних дорожек.",
    "answer": "Неверно"
  },
  {
    "week": 15,
    "question": "Сопоставьте названия стратегий с их описанием",
    "answer": "При позиционировании головки следующим выбирается запрос, для которого необходимо минимальное перемещение головки. → SSTF, В этой стратегии запросы обслуживаются в порядке поступления → FCFS, Обслуживая запросы головка движется в одном направлении. Если в указанном направлении больше нет запросов, головка скачком возвращается к началу. → C-SCAN"
  },
  {
    "week": 15,
    "question": "Укажите какие из стратегий планирования выполнения запросов к жесткому диску обрабатывают обращения к крайним цилиндрам дольше, чем обращения к цилиндрам, находящимся в средней зоне диска.",
    "answer": "SSTF, LOOK"
  },
  {
    "week": 15,
    "question": "Функции файловой системы можно распределить на функции, относящиеся к файлу в целом и на функции, работающие с элементами файлов. Рассортируйте перечисленные функции по указанному принципу.",
    "answer": "прочитать (read) → работает с индивидуальными элементами данных в рамках файла, копировать (copy) → работает с файлом, как с единым целым, открыть (open) → работает с файлом, как с единым целым, записать (write) → работает с индивидуальными элементами данных в рамках файла, создать (create) → работает с файлом, как с единым целым"
  },
  {
    "week": 15,
    "question": "Стратегия SSTF оказывает предпочтение средним дорожкам за счет внутренних и наружных.",
    "answer": "Верно"
  },
  {
    "week": 15,
    "question": "Сектор - минимальная адресуемая единица для работы с диском. Укажите размер сектора (в байтах) для самых первых накопителей на жестких магнитных дисках.\nУказание - следует ввести только число.",
    "answer": "512"
  },
  {
    "week": 15,
    "question": "Не следует оставлять \"без присмотра\" важные файлы. Отметьте, как можно защитить их.\nВыберите один или несколько ответов:",
    "answer": "зашифровать, установить атрибуты на доступ только для лиц, имеющих право работать с указанными файлами, вычислить для каждого важного файла контрольную сумму и включить сверку вычисляемых и эталонных контрольных сумм в ежедневную проверку"
  },
  {
    "week": 15,
    "question": "Допустим диск имеет 100 цилиндров (от 0 до 99). В настоящий момент сформирована очередь запросов: 2, 7, 55, 61, 45, 17, 80, 10,\nа текущий цилиндр – 50. В соответствии с указанной в параметрах подсистемы ввода- вывода стратегией очередь была обслужена в таком порядке 2, 7, 55, 61, 45, 17, 80, 10. Какая стратегия была применена? Укажите только аббревиатуру заглавными английскими буквами.",
    "answer": "FCFS"
  },
  {
    "week": 15,
    "question": "Ниже приведен фрагмент сеанса работы некоего пользователя в UNIX-подобной операционной системе.\nmmcs@lubuntu-vm:~$ who am i\nmmcs pts/1 2018-12-09 20:31 (:0.0)\nmmcs@lubuntu-vm:~$ cat >test15.txt\nOwner?\n^C\nmmcs@lubuntu-vm:~$ sudo chown mmcs1 test15.txt\nmmcs@lubuntu-vm:~$\nОпределите, какие значения будут указаны поле \"владелец файла\" в атрибутах файла test15.txt",
    "answer": "mmcs1"
  },
  {
    "week": 14,
    "question": "Влияет ли разрядность указателя (слайд 22 лекции 20) на максимальный размер файла?",
    "answer": "Да"
  },
  {
    "week": 13,
    "question": "Следует отличать буферизацию от кэширования. Назначение этих механизмов различно.",
    "answer": "Буферизация используется [для “устранения” разницы в скорости участников обмена информацией] и [для временного хранения данных]. Кэширование используется [для увеличения скорости доступа к данным]."
  },
  {
    "week": 13,
    "question": "Многоуровневая архитектура файловой системы \"предполагает\", что ключевые алгоритмы и структуры данных для обеспечения манипуляций с файлами выполняются на разных уровнях.\nСоотнесите описание действия с названием уровня. [2]",
    "answer": "таблица открытых файлов, индексных узлов и т. д. → базовая файловая система\nменеджер свободного пространства → базовая файловая система\nперевод логического адреса файла в физический (номер цилиндра, поверхности, сектора) → драйверы\ncистемный вызов (например, close) в прикладной программе → логический ввод - вывод\nвызов команды chmod в терминале → логический ввод - вывод"
  },
  {
    "week": 15,
    "question": "Какую из предложенных стратегий поддержки актуальной версии операционной системы следует считать оптимальной с точки зрания безопасности?",
    "answer": "Регулярно устанавливать обновления операционной системы с официального сайта-разработчика ОС. Обязательно устанавливать те из них, которые относятся к безопасности"
  },
  {
    "week": 14,
    "question": "Стратегии планирования, рассмотренные на лекции, ориентированы на достижение определенных целей. Отметьте, каких именно.",
    "answer": "максимизация пропускной способности (т. е. числа обработанных секторов в единицу времени)\nминимизация среднего времени ответа\nминимизация дисперсии времен ответа (т.е. минимизация разницы между максимальным временем ответа и минимальным)"
  },
  {
    "week": 14,
    "question": "Хакеры часто используют \"взломанную\" ОС как базу по взлому других систем. Отметьте, что следует отключить в ОС, чтобы уменьшить вероятность взлома",
    "answer": "учетные записи с плохо подобранными паролями\nанонимные FTP-каталоги с возможностью записи\nгрупповые учетные записи (когда несколько человек работают под одним логином)"
  },
  {
    "week": 14,
    "question": "Сопоставьте названия стратегий с их описанием",
    "answer": "Обслуживая запросы головка движется в одном направлении. Если в указанном направлении больше нет запросов, головка скачком возвращается к началу.-C-SCAN\nВ этой стратегии запросы обслуживаются в порядке поступления - FCFS\nПри позиционировании головки следующим выбирается запрос, для которого необходимо минимальное перемещение головки. - SSTF"
  },
  {
    "week": 14,
    "question": "Стратегия SSTF оказывает предпочтение средним дорожкам за счет внутренних и наружных.",
    "answer": "Верно"
  },
  {
    "week": 14,
    "question": "Какую из предложенных стратегий поддержки актуальной версии операционной системы следует считать оптимальной с точки зрания безопасности?",
    "answer": "Регулярно устанавливать обновления операционной системы с официального сайта-разработчика ОС. Обязательно устанавливать те из них, которые относятся к безопасности"
  },
  {
    "week": 14,
    "question": "Не следует оставлять \"без присмотра\" важные файлы. Отметьте, как можно защитить их.",
    "answer": "установить атрибуты на доступ только для лиц, имеющих право работать с указанными файлами\nзашифровать\nвычислить для каждого важного файла контрольную сумму и включить сверку вычисляемых и эталонных контрольных сумм в ежедневную проверку"
  },
  {
    "week": 14,
    "question": "В UNIX-подобных ОС пользователи могут задавать собственные пароли. Какие пароли НЕ следует считать надежными?",
    "answer": "всё перечисленное"
  },
  {
    "week": 14,
    "question": "Укажите какие из стратегий планирования выполнения запросов к жесткому диску обрабатывают обращения как к нулевому цилиндру, так и к цилиндрам, находящимся в средней зоне диска, за одинаковое время, т. е. отсутствует дискриминация крайних цилиндров.",
    "answer": "FCFS, C-SCAN"
  },
  {
    "week": 14,
    "question": "Стратегия C-SCAN так же как и стратегия SCAN демонстрирует дискриминацию крайних дорожек.",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Благодаря DMA можно избежать большого числа тупиков. Какое из условий возникновения взаимоблокировок \"разрушает\" эта технология?",
    "answer": "Условие взаимного исключения"
  },
  {
    "week": 16,
    "question": "Подход большинства создателей современных ОС состоит в том, чтобы игнорировать проблему\nвозникновения взаимоблокировок, считая, что маловероятный случайный тупик\nпредпочтительнее, чем внедрение сложных и и дорогостоящих средств борьбы с тупиками в\nущерб производительности системы или удобствам пользователей.",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Укажите, к какому из условий возникновения тупиков относится трактовка: \"Ресурс, выделенный ранее, не может быть принудительно забран у процесса до его завершения. Ресурсы могут быть освобождены только процессом, который их удерживает.\"",
    "answer": "Условие невыгружаемости"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1\nсвободный экземпляр этого этого ресурса.\nПроцесс Имеет ресурсов Max\n1 9\n2 7\n3 4\n1 2\n1 3\n1 5\nПроцесс C запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира\nудовлетворил этот запрос.",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Постройте граф Холта по описанию.\n1 Процесс A удерживает R и хочет получить S.\n2 Процесс B не удерживает никаких ресурсов, но хочет получить T.\n3 Процесс C не удерживает никаких ресурсов, но хочет получить S\n4 Процесс D удерживает U и хочет получить S и T.\n5 Процесс E удерживает T и хочет получить V\n6 Процесс F удерживает W и хочет получить S.\n7 Процесс G удерживает V и хочет получить W.\nВерно ли, что в этом графе Холта есть цикл?",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Постройте граф Холта по описанию.\n1 Процесс A удерживает R и хочет получить S.\n2 Процесс B не удерживает никаких ресурсов, но хочет получить T.\n3 Процесс C не удерживает никаких ресурсов, но хочет получить S\n4 Процесс D удерживает S и U и хочет получить T.\n5 Процесс E удерживает T и хочет получить V.\n6 Процесс F удерживает W и хочет получить S.\n7 Процесс G удерживает V и хочет получить W.\nВерно ли, что в системе тупиковая ситуация?",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Благодаря жесткой дисциплине по запросу ресурсов возможно избежать большого количества тупиков. На какие из условий возникновения взаимоблокировок могут повлиять требования до запуска процесса указывать все необходимые ему ресурсы и использовать сначала сканер, а потом принтер?",
    "answer": "Условие циклического ожидания\nУсловие ожидания и удержания"
  },
  {
    "week": 16,
    "question": "Пусть в системе имеется 4 вида ресурсов. Вектора E, A, матрицы C и R приведены ниже\nE = (2 1 1 4)\nA = (1 0 0 1)\nМатрица C\n0 1 0 1\n0 0 1 0\n1 0 0 0\n0 0 0 2\nМатрица R\n2 0 1 1\n1 0 0 0\n0 0 0 4\n1 0 1 0\nВерно ли, что в системе имеет место взаимоблокировка?",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1 свободный экземпляр этого этого ресурса.\nПроцесс Имеет ресурсов Max\n1 9\n2 7\n3 4\n1 2\n1 3\n1 5\nПроцесс A запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Пусть в системе имеется 4 вида ресурсов. Вектора E, A, матрицы C и R приведены ниже.\n\nE = (2 1 1 4)\n\nA = (1 0 0 1)\n\nМатрица C\n\n0 1 0 1\n0 0 1 0\n1 0 0 0\n0 0 0 2\nМатрица R\n\n2 0 1 1\n1 0 0 0\n0 0 0 2\n1 0 1 0\n\nВерно ли, что в системе имеет место взаимоблокировка?",
    "answer": "неверно"
  },
  {
    "week": 16,
    "question": "При возникновении тупиковой ситуации не обязательно снимать с выполнения все заблокированные процессы, а можно...\nУкажите приемлемые варианты.",
    "answer": "снять часть процессов, при этом освобождая ресурсы, ожидаемые остальными\nпроцессами;\nсовершить «откат» некоторых процессов до заранее сохраненного места;\nотобрать ресурс у одного процесса и передать его другому процессу"
  },
  {
    "week": 16,
    "question": "Тупики могут быть предотвращены на стадии проектирования и разработки программного обеспечения. Можно написать программу так, чтобы тупик не мог возникнуть ни при каком соотношении взаимных скоростей процессов. Верно ли это?",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Распределение ресурсов, захваченных процессами, представлено в таблице ниже. В наличии есть 3 свободных экземпляра ресурса.\n1 9\n1 9\n1 4\n1 2\n1 3\n1 5\nВерно ли, что указанное состояние является безопасным?",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1 свободный экземпляр этого этого ресурса.\nПроцесс Имеет ресурсов Max\n1 9\n2 7\n3 4\n1 2\n1 3\n1 5\nПроцесс D запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1 свободный экземпляр этого этого ресурса.\nПроцесс Имеет ресурсов Max\n1 9\n2 7\n3 4\n1 2\n1 3\n1 5\nПроцесс B запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Постройте граф Холта по описанию.\n1 Процесс A удерживает R и хочет получить S.\n2 Процесс B удерживает T и хочет получить R\n3 Процесс C не удерживает никаких ресурсов, но хочет получить S\n4 Процесс D удерживает S и U и хочет получить T.\n5 Процесс E хочет получить V.\n6 Процесс F удерживает W и хочет получить S.\n7 Процесс G удерживает V и хочет получить W.\nВерно ли, что в системе тупиковая ситуация?",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Пусть в системе имеется 4 вида ресурсов. Вектора E, A, матрицы C и R приведены ниже\nE = (2 1 1 4)\nA = (1 0 0 1)\nМатрица C\n0 1 0 1\n0 0 1 0\n1 0 0 0\n0 0 0 2\nМатрица R\n2 0 1 1\n1 0 0 0\n0 0 0 2\n1 0 1 0\nВерно ли, что в системе имеет место взаимоблокировка?",
    "answer": "Неверно"
  },
  {
    "week": 15,
    "question": "Распределение ресурсов, захваченных процессами, представлено в таблице ниже. В наличии есть 4 свободных экземпляра ресурса.\nПроцесс Имеет ресурсов Max\nA 1 9\nB 0 9\nC 1 4\nD 1 2\nE 1 3\nF 1 5\nВерно ли, что указанное состояние является безопасным?",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Подход большинства создателей современных ОС состоит в том, чтобы игнорировать проблему возникновения взаимоблокировок, считая, что маловероятный случайный тупик предпочтительнее, чем внедрение сложных и дорогостоящих средств борьбы с тупиками в ущерб производительности системы или удобствам пользователей.",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "E = (2 1 1 4)\n\nA = (1 0 0 1)\n\nМатрица C\n\n0 1 0 1\n0 0 1 0\n1 0 0 0\n0 0 0 2\nМатрица R\n\n2 0 1 1\n1 0 0 0\n0 0 0 4\n1 0 1 0\n\nВерно ли, что в системе имеет место взаимоблокировка?",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1 свободный экземпляр этого ресурса.\n\nПроцесс Имеет ресурсов Max\nA 1 9\nB 2 7\nC 3 4\nD 1 2\nE 1 3\nF 1 5\nПроцесс D запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределения ресурсов. В наличии есть ещё 1 свободный экземпляр этого ресурса.\nПроцесс Имеет ресурсов Max\nA 1 9\nB 2 7\nC 3 4\nD 1 2\nE 1 3\nF 1 5\nПроцесс B запросил еще одну единицу ресурса.. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределения ресурсов.. В наличии есть ещё 1 свободный экземпляр этого ресурса..\nПроцесс Имеет ресурсов Max\nA 1 9\nB 2 7\nC 3 4\nD 1 2\nE 1 3\nF 1 5\nПроцесс C запросил еще одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Верно"
  },
  {
    "week": 16,
    "question": "Пусть имеет место следующая таблица распределения ресурсов. В наличии есть ещё 1 свободный экземпляр этого ресурса.\nПроцесс Имеет ресурсов Max\nA 1 9\nB 2 7\nC 3 4\nD 1 2\nE 1 3\nF 1 5\nПроцесс А запросил еще одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Неверно"
  },
  {
    "week": 16,
    "question": "Тупики могут быть предотвращены на стадии проектирования и разработки программного обеспечения. Можно написать программу так, чтобы тупик не мог возникнуть ни при каком соотношении взаимных скоростей процессов.\n\nВерно ли это?",
    "answer": "Верно"
  },
  {
    "week": 15,
    "question": "Пусть в системе имеется 4 вида ресурсов. Вектора E, A, матрицы C и R приведены ниже.\n\nE = (2 1 1 4)\n\nA = (1 0 0 1)\n\nМатрица C\n\n0 1 0 1\n0 0 1 0\n1 0 0 0\n0 0 0 2\nМатрица R\n\n2 0 1 1\n1 0 0 0\n0 0 0 4\n1 0 1 0\n\nВерно ли, что в системе имеет место взаимоблокировка?",
    "answer": "Верно"
  },
  {
    "week": 15,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1 свободный экземпляр этого ресурса.\n\nПроцесс Имеет ресурсов Max\nA 1 9\nB 2 7\nC 3 4\nD 1 2\nE 1 3\nF 1 5\nПроцесс B запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Неверно"
  },
  {
    "week": 15,
    "question": "Пусть имеет место следующая таблица распределение ресурсов. В наличии есть ещё 1 свободный экземпляр этого ресурса.\n\nПроцесс Имеет ресурсов Max\nA 1 9\nB 2 7\nC 3 4\nD 1 2\nE 1 3\nF 1 5\nПроцесс C запросил ещё одну единицу ресурса. Работающий в системе алгоритм банкира удовлетворил этот запрос.",
    "answer": "Верно"
  },
  {
    "week": 1,
    "question": "Пусть некоторый язык программирования предоставляет встроенный тип данных «матрица», предоставляющий две операции: создание матрицы с заданными размерами, обращение к (i,j)-ому элементу.\n\nКонкретный способ расположения данных из ячеек матрицы: по строкам (как в C) или по столбцам (как в Фортране) или любой другой относится к:",
    "answer": "Ответ: организации данного языка программирования"
  },
  {
    "week": 1,
    "question": "Технология реализации какого блока машины Атанасова-Берри больше всего напоминает соответствующий блок у современных компьютеров?",
    "answer": "Оперативная память"
  },
  {
    "week": 1,
    "question": "Пусть некоторая многозадачная операционная система предоставляет интерфейс запуска новых задач для пользователя. Далее она управляет загрузкой этих задач на центральный процессор. Верно ли, что конкретный алгоритм планировки задач (очерёдность и длительность выполнения на ЦП каждой задачи) является частью архитектуры уровня операционной системы?",
    "answer": "Неверно"
  },
  {
    "week": 2,
    "question": "С точки зрения классификации Флинна кластеры относятся к",
    "answer": "MIMD"
  },
  {
    "week": 2,
    "question": "Чтобы конкурировать с недавно изобретенным печатным станком, один средневековый монастырь решил наладить массовое производство рукописных книг. Для этого в большом зале собралось огромное количество писцов. Настоятель монастыря называл первое слово книги, и все писцы записывали его. Затем настоятель называл второе слово, и все писцы записывали его. Этот процесс повторялся до тех пор, пока не была прочитана вслух и переписана вся книга. На какую из систем параллельной обработки информации эта система похожа больше всего?\n\nОтвет можно найти в разделе \"Параллелизм на уровне процессоров\" (Таненбаум Э, Остин Т. Архитектура компьютера).",
    "answer": "Мультипроцессор"
  },
  {
    "week": 1,
    "question": "До изобретения уровня операционной системы загрузка компилятора нужного языка программирования высокого уровня сводилась для программиста к",
    "answer": "подаче нужной стопки перфокарт (или аналогичного носителя информации) в приёмноё устройство компьютера"
  },
  {
    "week": 2,
    "question": "Говорят, что в типичной фоннеймановской архитектуре семейства процессоров Intel появился элемент гарвардской архитектуры после",
    "answer": "введения кэша для данных и кэша для инструкций в Pentium Pro"
  },
  {
    "week": 1,
    "question": "Директивы ассемблера (.SECT, .WORD и т. п.) позволяют делать следующее",
    "answer": "Управлять процессом ассемблирования программы"
  },
  {
    "week": 2,
    "question": "Главным идеологом компьютеров НЕ основанных на интерпретации команд в 60-е — 70-е гг. был (имя и фамилия на русском)",
    "answer": "Сеймур Крей"
  },
  {
    "week": 2,
    "question": "Метки являются символическими константами, введёнными в язык ассемблера для удобства программиста. Процессор ничего не знает про имена меток и работает лишь с числовыми величинами, задающими смещение в нужном сегменте. Эти величины вычисляются по простым правилам и подставляются ассемблером на этапе ассемблирования. Вообще говоря, ничто не мешает отказаться от использования меток и вычислять необходимые величины собственноручно.\n\nПостарайтесь определить в уме значение области памяти по метке res после окончания следующей программы. При вычислении вам может \"помочь\" задача 4 (task-4.s) первой лабораторной и книга Таненбаума. Свою догадку, конечно, можно проверить с помощью s88/t88.\n\nВведите число (в десятичной системе счисления) - значение области памяти по метке res",
    "answer": "14"
  },
  {
    "week": 3,
    "question": "Современные RISC-машины в основном используют",
    "answer": "переключаемый порядок байт"
  },
  {
    "week": 3,
    "question": "Непосредственно ниже оперативной памяти в иерархии памяти (то есть, более медленная, более объёмная и более дешевая технология) находится",
    "answer": "жёсткие диски"
  },
  {
    "week": 3,
    "question": "В иерархии памяти непосредственно под оперативной памятью располагается (располагаются):",
    "answer": "жёсткий диск"
  },
  {
    "week": 2,
    "question": "Архитектура MIPS (что расшифровывается, как Microprocessor without Interlocked Pipeline Stages, в переводе с английского \"процессор без блокировок в конвейере\") относится к",
    "answer": "RISC-архитектуре"
  },
  {
    "week": 4,
    "question": "Самый малозатратный по времени стиль взаимодействия с подсистемой ввода-вывода с точки зрения процессора это",
    "answer": "прямой доступ в память (через контроллер ПДП)"
  },
  {
    "week": 4,
    "question": "Пользуясь справочными данными по архитектуре MIPS, переведите следующую ассемблерную команду MIPS в бинарный код\n\nslti $t3, $s0, 12\n\nДля записи ответа использовать только символы 0 и 1 (без пробелов и других символов).",
    "answer": "00101010000010110000000000001100"
  },
  {
    "week": 4,
    "question": "Требование по выравниванию применяется не только к арифметическим операндам, но и к адресам, по которым расположены инструкции программы. Поскольку все инструкции в MIPS32 имеют размер 4 байта, то они должны быть выравнены по адресам, кратным четырём. Это позволяет экономить на нижних двух битах записи адреса в инструкциях ветвлений (be / bne).\n\nПо какому диапазону адресов можно переходить с помощью be / bne?",
    "answer": "По адресам, начинающимся за 128Kb до места ветвления и заканчивающимся через 128Kb после места ветвления."
  },
  {
    "week": 4,
    "question": "Что из перечисленного отличает набор инструкций MIPS от x86?",
    "answer": "видеокартой"
  },
  {
    "week": 3,
    "question": "В некотором жёстком диске установлено 12 пластин с магнитной поверхностью. Количество головок такого жёсткого диска равно",
    "answer": "24"
  },
  {
    "week": 3,
    "question": "Борьба с окончательно повреждёнными секторами осуществляется контроллером жёсткого диска за счёт",
    "answer": "парка запасных секторов, предусмотренных заранее"
  },
  {
    "week": 4,
    "question": "Рассмотрим реализацию процедуры swap, которая меняет местами значения по двум данным ей адресам.\n\nSWAP:\nPUSH BP\nMOV BP, SP\n\nMOV SI, 4(BP)\nMOV DI, 6(BP)\n\nMOV AX, (SI)\nMOV DX, (DI)\nMOV (SI), DX\nMOV (DI), AX\n\nPOP BP\nRET\nЕсли предположить, что реализация процедуры корректна и допущено не более одного нарушения конвенции вызова cdecl, то это нарушение заключается в том, что…\n\nВыберите один ответ",
    "answer": "не сохраняются старые значения регистров"
  },
  {
    "week": 4,
    "question": "Рассмотрим реализацию процедуры swap, которая меняет местами значения по двум данным ей адресам.\n\nSWAP:\nPUSH BP\nMOV BP, SP\n\nMOV AX, (SI)\nMOV DX, (DI)\nMOV (SI), DX\nMOV (DI), AX\n\nPOP BP\nRET\nЕсли предположить, что реализация процедуры корректна и допущено не более одного нарушения конвенции вызова cdecl, то это нарушение заключается в том, что…\n\nВыберите один ответ",
    "answer": "параметры передаются через регистры"
  },
  {
    "week": 4,
    "question": "При помощи какой инструкции ассемблера можно обратиться к устройствам ввода-вывода. Ответ следует дать для ассемблера, который используется вами на лабораторных занятиях.",
    "answer": "SYS"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики:\n\n4,66 - среднее время доступа к оперативной памяти (в наносекундах),\n\n3,76 - среднее время доступа к TLB (в наносекундах),\n\n0,56 - вероятность наличия информации в TLB.\n\nиспользуется трёхуровневая организация таблицы страниц.\n\nПосчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "14,57"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие характеристики:\n\n9,18 - среднее время доступа к оперативной памяти (в наносекундах),\n\n5,53 - среднее время доступа к TLB (в наносекундах),\n\n0,21 - вероятность наличия информации в TLB.\n\nиспользуется трёхуровневая организация таблицы страниц.\n\nПосчитайте среднее время доступа к данному с точностью до двух знаков после запятой. В качестве ответа укажите только число, в котором целая и дробная части отделяются запятой.",
    "answer": "36,47"
  },
  {
    "week": 13,
    "question": "Дополните определения.\n\nЕсли центральный процессор занимается вводом или выводом каждого байта и пребывает в цикле ожидания, пока сможет получить или отправить следующую порцию данных, то имеет место ....\n\nЕсли центральный процессор инициирует передачу символа и переходит к решению каких-нибудь других задач, пока не поступит сигнал о завершении ввода-вывода, то имеет место ....\n\nЕсли существует отдельная микросхема, которая полностью управляет передачей блока данных, выдавая прерывание только тогда, когда будет передан весь блок то говорят, что это ....",
    "answer": "Дополните определения.\n\nЕсли центральный процессор занимается вводом или выводом каждого байта и пребывает в цикле ожидания, пока сможет получить или отправить следующую порцию данных, то имеет место [программный способ ввода‑вывода].\n\nЕсли центральный процессор инициирует передачу символа и переходит к решению каких-нибудь других задач, пока не поступит сигнал о завершении ввода-вывода, то имеет место [ввод‑вывод управляемый прерываниями].\n\nЕсли существует отдельная микросхема, которая полностью управляет передачей блока данных, выдавая прерывание только тогда, когда будет передан весь блок то говорят, что это [ввод‑вывод через прямой доступ к памяти]"
  },
  {
    "week": 16,
    "question": "Для программной реализации методов распознавания тупиков в операционной системе должен вестись учет. Выберите те механизмы и данные, без которых невозможно установить факт взаимоблокировки.",
    "answer": "таблица распределения ресурсов за процессами\nтаблица запросов процессов к занятым ресурсам"
  },
  {
    "week": 1,
    "question": "Пользуясь справочными данными по архитектуре MIPS определите, что за\nинструкция MIPS имеет 16-ричный код 00?",
    "answer": "sll"
  },
  {
    "week": 1,
    "question": "Предположим, что на клавиатуре Вашего компьютера не работают клавиша, соответствующая букве A (в английской раскладке), а Вам надо срочно внести изменения в текст программы на ассемблере для выполнения лабораторного задания - надо вставить команду, увеличивающую регистр СХ на 1. Какой инструкцией следует воспользоваться в такой ситуации?",
    "answer": "INC"
  },
  {
    "week": 4,
    "question": "Число 0A0C в памяти машины с восьмибитным байтом и обратным (little-endian) обратным порядком байт в слове и размером слова в 16 бит выглядит следующим\nобразом.",
    "answer": "0C0A"
  },
  {
    "week": 4,
    "question": "Интерфейс PCI Express, реализованный на последних процессорах Intel, чаще всего используется для связи с",
    "answer": "видеокартой"
  },
  {
    "week": 4,
    "question": "Какой инструкцией обычно заканчивается подпрограмма в архитектуре MIPS?",
    "answer": "jr $ra"
  },
  {
    "week": 4,
    "question": "Рассмотрим реализацию процедуры swap, которая меняет местами значения по двум данным ей адресам.\n\nSWAP:\nPUSH BP\nMOV BP, SP\nPUSH DI\nPUSH SI\nMOV SI, 4(BP)\nMOV DI, 6(BP)\nMOV AX, (SI)\nMOV DX, (DI)\nMOV (SI), DX\nMOV (DI), AX\nPOP SI\nPOP DI\nPOP BP\nRET 4\n\nЕсли предположить, что реализация процедуры корректна и допущено не более\nодного нарушения конвенции вызова cdecl, то это нарушение заключается в том,\nчто…",
    "answer": "стек очищает вызываемый код"
  },
  {
    "week": 4,
    "question": "Основная функция микросхемы северного моста на материнских платах состоит в",
    "answer": "предоставлении процессора доступу к части системной шины, содержащей более быстрые части вычислительной системы (память, графический адаптер)"
  },
  {
    "week": 4,
    "question": "Запишите название инструкции, используемой в архитектуре x86 для вызова программного прерывания.",
    "answer": "INT"
  },
  {
    "week": 1,
    "question": "Основным конструктивным элементом, обеспечившим переход от первого поколения (ламповых) электронных вычислительных машин ко второму, стал",
    "answer": "транзистор"
  },
  {
    "week": 1,
    "question": "Исходное назначение первого публичного электронного компьютера ENIAC состояло в рассчётах для следующих задач.",
    "answer": "Баллистических траекторий"
  },
  {
    "week": 1,
    "question": "Всеобщий переход от использования ламп к использованию транзисторов связан с тем, что последние по сравнению с первыми:",
    "answer": "всё вышеперечисленное."
  },
  {
    "week": 1,
    "question": "Запишите имя первой машины с хранимой в памяти программой, разработанной на Европейском континенте.",
    "answer": "МЭСМ"
  },
  {
    "week": 1,
    "question": "Самое общее название для программы, которая переводит текст на одном языке («исходном») в текст на другом языке («целевом», зачастую бинарном) называется",
    "answer": "компилятор"
  },
  {
    "week": 4,
    "question": "global",
    "answer": "Что из перечисленного отличает набор инструкций MIPS от x86?"
  },
  {
    "week": 12,
    "question": "Пусть в некоторой операционной системе имеют место следующие\nхарактеристики:\n2,87 - среднее время доступа к оперативной памяти (в наносекундах),\n9,26 - среднее время доступа к TLB (в наносекундах),\n0,37 - вероятность наличия информации в TLB.\nИспользуется двухуровневая организация таблицы страниц.\nПосчитайте среднее время доступа к данному с точностью до двух знаков после\nзапятой. В качестве ответа укажите только число, в котором целая и дробная\nчасти отделяются запятой.",
    "answer": "15,75"
  }
]